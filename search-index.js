var searchIndex = new Map(JSON.parse('[\
["dash_sdk",{"doc":"Dash Platform Rust SDK","t":"EFEESONNNNOCENNQQQECNNNNNNCNCOCONNNNNNPPPGPPPPPPPGPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEKKMNMNCCFFNNNNOONNNNNNNNNNNNONNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNKSGGFFKKFGGFFKRRIPPPPNNNNNNNNNNCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNENONNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNCNNNNNNNNNNNNMNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNHFPFFPPFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGFFFFFFFPPFFNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNOOOOCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCFPGNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNFFFPGONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNOONNONNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNFPFPGNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNFPGNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNFFFPGNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNONNNONNNNNNNNNNNCNNNNONNNOONNONNNNNNNNNNNNOGPPNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNFPPGNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNFFPPGNNNNNNNNNNNNNNNNNNNNNNNONNNOOONNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNNNNNNNNNFPGNNNNNNNNNONNNNONNNNNNNNNNNONNNNNNNONONNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNFPFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNNNOONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNFPPGONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNONNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNOOONNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNFPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNFPPGNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNONNNONNNNNNNNNNNCONNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNOONNNNNNOOONNNNNNNNNNNNNNNOCNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNPGNNNNNNNNNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNPGFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNFPGNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNFPGNNNNNNNNNNNNNNNNNNNNNNNCNNNNNONNONNNNNNNNNNNNNNPGFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNOONNNPGPPNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNCPPGNNNNNNNNNNNNNNNNNNNNNPGFNNNNCCNNNNNNNNCCCCCCCNNNNNNNNCNNCKMMKMMKMMMKMMMKMMMKMMFNNNNNNNNONNONNNNNONKMKMMMKMMMKMCCCFKONNNNNMMNNNNNNNONNNNNNPPPPGGFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMFSSSIFFFIFNNNNONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Error","RequestSettings","Sdk","SdkBuilder","VERSION","ban_failed_address","borrow","borrow_mut","clone","clone_into","connect_timeout","core","dapi_client","default","default","delegate_enum","delegate_from_proof_variant","delegate_transport_request_variant","dpp","error","finalize","fmt","from","from_ref","into","into_request","mock","override_by","platform","retries","sdk","timeout","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","Cancelled","Config","Config","ContextProviderError","ContextProviderError","CoreClientError","CoreError","DapiClientError","DapiMocksError","Drive","EpochNotFound","Error","Generic","Generic","InvalidDataContract","InvalidProvedResponse","InvalidQuorum","MerkleBlockError","MissingDependency","Proof","Protocol","TimeoutReached","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into_request","into_request","source","to_string","to_string","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","MockDashPlatformSdk","MockResponse","Mockable","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","provider","sdk","Cache","GrpcContextProvider","borrow","borrow","borrow_mut","borrow_mut","data_contracts_cache","dump_dir","from","from","get","get_data_contract","get_quorum_public_key","into","into","into_request","into_request","new","new","put","quorum_public_keys_cache","set_dump_dir","set_sdk","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","MockDashPlatformSdk","borrow","borrow_mut","clone","clone_into","expect_fetch","expect_fetch_many","fmt","from","from_ref","into","into_request","load_expectations","quorum_info_dir","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","ContextProvider","DEFAULT_EPOCH_QUERY_LIMIT","DataContract","Document","DocumentQuery","DriveQuery","Fetch","FetchMany","Identifier","Identity","IdentityPublicKey","LimitQuery","MockContextProvider","Query","Request","Request","Revision","V0","V0","V0","V0","add_public_key","add_public_keys","as_bits","as_bytes","as_ref","as_slice","as_v0","as_v0_mut","balance","base32_len","block_info_from_metadata","block_time_ms","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_decode","borrow_decode","borrow_decode","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump_revision","bump_revision","check_base32","check_version_is_active","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","config","config_mut","construct_path_query","contract","contract_bounds","create_basic_identity","created_at","created_at_block_height","created_at_core_block_height","dapi","data","data_contract","data_owned","decode","decode","decode","default","default","default_version","default_version_on","default_versioned","default_versioned","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_from_bytes","deserialize_from_bytes","deserialize_from_bytes_no_limit","deserialize_from_bytes_no_limit","disabled_at","document_schemas","document_type","document_type_cloned_for_name","document_type_cloned_optional_for_name","document_type_for_name","document_type_name","document_type_optional_for_name","document_type_path","document_types","document_types_mut","documents_path","documents_primary_key_path","documents_with_history_primary_key_path","dpp","encode","encode","encode","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute","execute_transport","feature_version","fetch","fetch","fetch_by_identifier","fetch_by_identifier","fetch_by_identifiers","fetch_by_identifiers","fetch_many","fetch_many","fetch_many","fetch_many_with_limit","fetch_many_with_limit","fetch_with_metadata","fetch_with_metadata","fetch_with_settings","fetch_with_settings","find_best_index","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_btree_map_value","from_bytes","from_bytes","from_bytes_in_consensus","from_cbor","from_decomposed_values","from_json","from_platform_value","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_sql_expr","from_string","from_string_with_encoding_string","from_value","from_value","from_vec","generate_data_contract_id_v0","generate_document_id_v0","get_data_contract","get_data_contract","get_first_public_key_matching","get_non_primary_key_path_query","get_primary_key_path_query","get_public_key_by_id","get_public_key_by_id_mut","get_public_key_max_id","get_quorum_public_key","get_quorum_public_key","get_raw_for_contract","get_raw_for_document_type","has_document_type_for_name","hash","hash","hash","hash","hash","hash","id","id","id","id","id_ref","id_ref","increase_balance","increment_revision","increment_revision","increment_version","internal_clauses","into","into","into","into","into","into","into","into","into","into_buffer","into_map_value","into_partial_identity_info","into_partial_identity_info_no_balance","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_v0","into_value","into_value","is_disabled","is_empty","is_equal_ignoring_time_based_fields","is_for_primary_key","is_master","key_type","latest_version","latest_version_on","len","limit","limit","limit","main_keys_with_random_authentication_keys_with_private_keys_with_rng","max_possible_size_key","maybe_from_proof_with_metadata","maybe_from_proof_with_metadata","maybe_from_proof_with_metadata","maybe_from_proof_with_metadata","maybe_from_proof_with_metadata","metadata","metadata_mut","method_name","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","new","new","new","new_with_data_contract_id","new_with_drive_query","new_with_id_and_keys","offset","order_by","order_by_clauses","owner_id","owner_id","owner_id_ref","partial_cmp","partial_cmp","platform_encode","platform_encode","platform_encode","platform_versioned_borrow_decode","platform_versioned_borrow_decode","platform_versioned_decode","platform_versioned_decode","properties","properties_consumed","properties_mut","proto","public_keys","public_keys_mut","public_keys_owned","purchase_document","purchase_document_and_wait_for_response","purpose","put_to_platform","put_to_platform","put_to_platform","put_to_platform_and_wait_for_response","put_to_platform_and_wait_for_response","put_to_platform_and_wait_for_response","query","query","query","query","query","query","query","query","query","query","query","query","query","query","query_item_for_starts_at_key","quorum_keys_dir","random","random_authentication_key","random_authentication_key_with_private_key","random_authentication_key_with_private_key_with_rng","random_authentication_key_with_rng","random_authentication_keys","random_authentication_keys_with_private_keys_with_rng","random_authentication_keys_with_rng","random_ecdsa_critical_level_authentication_key","random_ecdsa_critical_level_authentication_key_with_rng","random_ecdsa_high_level_authentication_key","random_ecdsa_high_level_authentication_key_with_rng","random_ecdsa_master_authentication_key","random_ecdsa_master_authentication_key_with_rng","random_identities","random_identities_with_private_keys_with_rng","random_identities_with_rng","random_identity","random_identity_with_main_keys_with_private_key","random_identity_with_rng","random_key","random_key_with_known_attributes","random_key_with_rng","random_keys","random_keys_with_rng","random_unique_keys_with_rng","random_with_rng","read_only","reduce_balance","remove_disabled_at","request_name","revision","revision","root_path","schema_defs","security_level","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_consume","serialize_consume_to_bytes","serialize_consume_to_bytes","serialize_consume_to_bytes_with_platform_version","serialize_specific_version","serialize_to_bytes","serialize_to_bytes","serialize_to_bytes_with_platform_version","set_balance","set_config","set_created_at","set_created_at_block_height","set_created_at_core_block_height","set_data","set_disabled_at","set_document_schema","set_document_schemas","set_id","set_id","set_id","set_id","set_key_type","set_metadata","set_owner_id","set_owner_id","set_properties","set_public_keys","set_purpose","set_read_only","set_revision","set_revision","set_schema_defs","set_security_level","set_transferred_at","set_transferred_at_block_height","set_transferred_at_core_block_height","set_updated_at","set_updated_at_block_height","set_updated_at_core_block_height","set_version","start","start_at","start_at_document_path_and_key","start_at_included","to_buffer","to_cbor","to_cbor_value","to_json","to_json_value_vec","to_map_value","to_object","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string_with_encoding_string","to_validating_json","to_value","to_vec","top_up_identity","transfer_document_to_identity","transfer_document_to_identity_and_wait_for_response","transferred_at","transferred_at_block_height","transferred_at_core_block_height","transition","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_create_transition","try_from_create_transition_v0","try_from_owned_create_transition","try_from_owned_create_transition_v0","try_from_owned_replace_transition","try_from_owned_replace_transition_v0","try_from_platform_versioned","try_from_platform_versioned","try_from_platform_versioned","try_from_replace_transition","try_from_replace_transition_v0","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","update_price_of_document","update_price_of_document_and_wait_for_response","updated_at","updated_at_block_height","updated_at_core_block_height","validate_document","validate_document_properties","validate_update","verify_proof","verify_proof_keep_serialized","verify_start_at_document_in_proof","version","versioned_deserialize","versioned_deserialize_with_bytes_len","versioned_limit_deserialize","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_response","wait_for_response","wait_for_response","wait_for_response","wait_for_response","where_clauses","with_document_id","with_order_by","with_where","withdraw","write_base32","block_info_from_metadata","AllKeys","Authentication","BroadcastStateTransitionRequest","BroadcastStateTransitionResponse","Decryption","Encryption","GetConsensusParamsRequest","GetConsensusParamsResponse","GetDataContractHistoryRequest","GetDataContractHistoryResponse","GetDataContractRequest","GetDataContractResponse","GetDataContractsRequest","GetDataContractsResponse","GetDocumentsRequest","GetDocumentsResponse","GetEpochsInfoRequest","GetEpochsInfoResponse","GetIdentitiesContractKeysRequest","GetIdentitiesContractKeysResponse","GetIdentityBalanceAndRevisionRequest","GetIdentityBalanceAndRevisionResponse","GetIdentityBalanceRequest","GetIdentityBalanceResponse","GetIdentityByPublicKeyHashRequest","GetIdentityByPublicKeyHashResponse","GetIdentityContractNonceRequest","GetIdentityContractNonceResponse","GetIdentityKeysRequest","GetIdentityKeysResponse","GetIdentityNonceRequest","GetIdentityNonceResponse","GetIdentityRequest","GetIdentityResponse","GetPathElementsRequest","GetPathElementsResponse","GetProofsRequest","GetProofsResponse","GetProtocolVersionUpgradeStateRequest","GetProtocolVersionUpgradeStateResponse","GetProtocolVersionUpgradeVoteStatusRequest","GetProtocolVersionUpgradeVoteStatusResponse","KeyPurpose","KeyRequestType","Proof","ResponseMetadata","SearchKey","SecurityLevelMap","SpecificKeys","StateTransitionBroadcastError","Transfer","Voting","WaitForStateTransitionResultRequest","WaitForStateTransitionResultResponse","as_str_name","block_id_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","compare","core_chain_locked_height","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","execute_transport","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str_name","get_consensus_params_request","get_consensus_params_response","get_data_contract_history_request","get_data_contract_history_response","get_data_contract_request","get_data_contract_response","get_data_contracts_request","get_data_contracts_response","get_documents_request","get_documents_response","get_epochs_info_request","get_epochs_info_response","get_identities_contract_keys_request","get_identities_contract_keys_response","get_identity_balance_and_revision_request","get_identity_balance_and_revision_response","get_identity_balance_request","get_identity_balance_response","get_identity_by_public_key_hash_request","get_identity_by_public_key_hash_response","get_identity_contract_nonce_request","get_identity_contract_nonce_response","get_identity_keys_request","get_identity_keys_response","get_identity_nonce_request","get_identity_nonce_response","get_identity_request","get_identity_response","get_path_elements_request","get_path_elements_response","get_proofs_request","get_proofs_response","get_protocol_version_upgrade_state_request","get_protocol_version_upgrade_state_response","get_protocol_version_upgrade_vote_status_request","get_protocol_version_upgrade_vote_status_response","get_security_level_map","grovedb_proof","hash","height","insert_security_level_map","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_valid","key_ids","key_request_type","message","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","method_name","method_name","method_name","method_name","method_name","method_name","method_name","method_name","method_name","method_name","method_name","method_name","method_name","method_name","method_name","method_name","method_name","method_name","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","mock_serialize","partial_cmp","platform_client","proof","proof","proof","proof","proof","proof","proof","proof","proof","proof","proof","proof","proof","proof","proof","proof","proof","proof","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","proof_owned","protocol_version","purpose_map","query","query","query","query","query","query","query","query","query","query","query","query","query","query","query","query","query","query","quorum_hash","quorum_type","request","round","security_level_map","security_level_map","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","state_transition","time_ms","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_state_transition_result_request","wait_for_state_transition_result_response","GetConsensusParamsRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","height","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","ConsensusParamsBlock","ConsensusParamsEvidence","GetConsensusParamsResponseV0","V0","Version","block","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","deserialize","encode","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","evidence","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into_request","into_request","into_request","into_request","max_age_duration","max_age_num_blocks","max_bytes","max_bytes","max_gas","merge","mock_deserialize","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","mock_serialize","serialize","serialize","serialize","serialize","time_iota_ms","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","GetDataContractHistoryRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","id","into","into","into_request","into_request","limit","merge","mock_deserialize","mock_serialize","offset","prove","serialize","serialize","start_at_ms","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetDataContractHistoryResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_data_contract_history_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","DataContractHistory","DataContractHistory","DataContractHistoryEntry","Proof","Result","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","data_contract_entries","date","default","default","deserialize","deserialize","deserialize","encode","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","into","into","into","into_request","into_request","into_request","merge","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","value","vzip","vzip","vzip","GetDataContractRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","id","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetDataContractResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_data_contract_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","DataContract","Proof","Result","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","serialize","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","GetDataContractsRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","ids","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","DataContractEntry","DataContracts","GetDataContractsResponseV0","V0","Version","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","data_contract","data_contract_entries","default","default","default","deserialize","deserialize","deserialize","deserialize","encode","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_data_contracts_response_v0","identifier","into","into","into","into","into_request","into_request","into_request","into_request","merge","metadata","mock_deserialize","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","mock_serialize","result","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DataContracts","Proof","Result","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","serialize","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","GetDocumentsRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","data_contract_id","default","deserialize","deserialize","document_type","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_documents_request_v0","into","into","into_request","into_request","limit","merge","mock_deserialize","mock_serialize","order_by","prove","serialize","serialize","start","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","where","Start","StartAfter","StartAt","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","serialize","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","GetDocumentsResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_documents_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","Documents","Documents","Proof","Result","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","documents","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetEpochsInfoRequestV0","V0","Version","ascending","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","count","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","start_epoch","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetEpochsInfoResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_epochs_info_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","EpochInfo","EpochInfos","Epochs","Proof","Result","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deserialize","deserialize","deserialize","encode","encoded_len","encoded_len","encoded_len","epoch_infos","eq","eq","eq","fee_multiplier","first_block_height","first_core_block_height","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","into","into","into","into_request","into_request","into_request","merge","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","number","protocol_version","serialize","serialize","serialize","start_time","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","vzip","vzip","vzip","GetIdentitiesContractKeysRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","contract_id","default","deserialize","deserialize","document_type_name","document_type_name","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","identities_ids","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","purposes","purposes","push_purposes","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetIdentitiesContractKeysResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_identities_contract_keys_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","IdentitiesKeys","IdentitiesKeys","IdentityKeys","Proof","PurposeKeys","Result","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","deserialize","encode","encoded_len","encoded_len","encoded_len","encoded_len","entries","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","identity_id","into","into","into","into","into_request","into_request","into_request","into_request","keys","keys_bytes","merge","mock_deserialize","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","mock_serialize","purpose","purpose","serialize","serialize","serialize","serialize","set_purpose","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","GetIdentityBalanceAndRevisionRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","id","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetIdentityBalanceAndRevisionResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_identity_balance_and_revision_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","BalanceAndRevision","BalanceAndRevision","Proof","Result","balance","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","revision","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetIdentityBalanceRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","id","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetIdentityBalanceResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_identity_balance_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","Balance","Proof","Result","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","serialize","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","GetIdentityByPublicKeyHashRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","public_key_hash","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetIdentityByPublicKeyHashResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_identity_by_public_key_hash_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","Identity","Proof","Result","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","serialize","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","GetIdentityContractNonceRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","contract_id","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","identity_id","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetIdentityContractNonceResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_identity_contract_nonce_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","IdentityContractNonce","Proof","Result","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","serialize","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","GetIdentityKeysRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","identity_id","into","into","into_request","into_request","limit","merge","mock_deserialize","mock_serialize","offset","prove","request_type","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetIdentityKeysResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_identity_keys_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","Keys","Keys","Proof","Result","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","keys_bytes","merge","mock_deserialize","mock_serialize","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetIdentityNonceRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","identity_id","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetIdentityNonceResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_identity_nonce_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","IdentityNonce","Proof","Result","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","serialize","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","GetIdentityRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","id","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetIdentityResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_identity_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","Identity","Proof","Result","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","serialize","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","GetPathElementsRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","keys","merge","mock_deserialize","mock_serialize","path","prove","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetPathElementsResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_path_elements_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","Elements","Elements","Proof","Result","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","elements","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetProofsRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","contracts","default","deserialize","deserialize","documents","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_proofs_request_v0","identities","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","ContractRequest","DocumentRequest","IdentityRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","contract_id","contract_id","default","default","default","deserialize","deserialize","deserialize","document_id","document_type","document_type_keeps_history","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","identity_id","identity_request","into","into","into","into_request","into_request","into_request","mock_deserialize","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","mock_serialize","request_type","request_type","serialize","serialize","serialize","set_request_type","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","vzip","vzip","vzip","Balance","FullIdentity","Keys","Revision","Type","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","hash","into","into_request","is_valid","partial_cmp","serialize","to_owned","try_from","try_from","try_into","try_into_platform_versioned","type_id","vzip","GetProofsResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_proofs_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","Proof","Result","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","serialize","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","GetProtocolVersionUpgradeStateRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetProtocolVersionUpgradeStateResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_protocol_version_upgrade_state_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","Proof","Result","VersionEntry","Versions","Versions","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deserialize","deserialize","deserialize","encode","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","into","into","into","into_request","into_request","into_request","merge","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","version_number","versions","vote_count","vzip","vzip","vzip","GetProtocolVersionUpgradeVoteStatusRequestV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","count","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","start_pro_tx_hash","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","GetProtocolVersionUpgradeVoteStatusResponseV0","V0","Version","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","get_protocol_version_upgrade_vote_status_response_v0","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","Proof","Result","VersionSignal","VersionSignals","Versions","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deserialize","deserialize","deserialize","encode","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","into","into","into","into_request","into_request","into_request","merge","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","pro_tx_hash","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","version","version_signals","vzip","vzip","vzip","AllKeys","Request","SearchKey","SpecificKeys","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","serialize","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","PlatformClient","accept_compressed","borrow","borrow_mut","broadcast_state_transition","clone","clone_into","connect","fmt","from","from","from_ref","get_consensus_params","get_data_contract","get_data_contract_history","get_data_contracts","get_documents","get_epochs_info","get_identities_contract_keys","get_identity","get_identity_balance","get_identity_balance_and_revision","get_identity_by_public_key_hash","get_identity_contract_nonce","get_identity_keys","get_identity_nonce","get_path_elements","get_proofs","get_protocol_version_upgrade_state","get_protocol_version_upgrade_vote_status","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","wait_for_state_transition_result","with_interceptor","with_origin","with_uri","with_uri_and_settings","AllKeysOfKindRequest","CurrentKeyOfKindRequest","KeyKindRequestType","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","hash","into","into_request","is_valid","partial_cmp","serialize","to_owned","try_from","try_from","try_into","try_into_platform_versioned","type_id","vzip","V0","Version","WaitForStateTransitionResultRequestV0","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","merge","mock_deserialize","mock_serialize","prove","serialize","serialize","state_transition_hash","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","V0","Version","WaitForStateTransitionResultResponseV0","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","deserialize","deserialize","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_request","into_request","merge","metadata","mock_deserialize","mock_serialize","result","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","vzip","vzip","wait_for_state_transition_result_response_v0","Error","Proof","Result","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","serialize","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","Todo","TransitionContext","TxId","borrow","borrow","borrow_mut","borrow_mut","broadcast","broadcast_request","from","from","from","into","into","into_request","into_request","is_confirmed","purchase_document","put_contract","put_document","put_identity","put_settings","top_up_identity","transfer_document","try_from","try_from","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","update_price_of_document","vzip","vzip","withdraw_from_identity","BroadcastStateTransition","broadcast","broadcast_and_wait","BroadcastRequestForStateTransition","broadcast_request_for_state_transition","wait_for_state_transition_result_request","PurchaseDocument","purchase_document","purchase_document_and_wait_for_response","wait_for_response","PutContract","put_to_platform","put_to_platform_and_wait_for_response","wait_for_response","PutDocument","put_to_platform","put_to_platform_and_wait_for_response","wait_for_response","PutIdentity","put_to_platform","put_to_platform_and_wait_for_response","PutSettings","borrow","borrow_mut","clone","clone_into","default","fmt","from","from_ref","identity_nonce_stale_time_s","into","into_request","request_settings","to_owned","try_from","try_into","try_into_platform_versioned","type_id","user_fee_increase","vzip","TopUpIdentity","top_up_identity","TransferDocument","transfer_document_to_identity","transfer_document_to_identity_and_wait_for_response","wait_for_response","UpdatePriceOfDocument","update_price_of_document","update_price_of_document_and_wait_for_response","wait_for_response","WithdrawFromIdentity","withdraw","epoch","identity","version_votes","EpochQuery","ExtendedEpochInfoEx","ascending","borrow","borrow_mut","clone","clone_into","default","fetch_current","fetch_current_with_metadata","fmt","from","from","from_ref","into","into_request","query","start","to_owned","try_from","try_into","try_into_platform_versioned","type_id","vzip","GetIdentity","GetIdentity","GetIdentityByPublicKeyHash","GetIdentityByPublicKeyHash","IdentityRequest","IdentityResponse","PublicKeyHash","Unknown","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","deserialize","eq","equivalent","equivalent","equivalent","execute","execute_transport","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","into","into","into","into_request","into_request","into_request","method_name","mock_deserialize","mock_deserialize","mock_serialize","mock_serialize","query","query","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","vzip","vzip","vzip","MasternodeProtocolVoteEx","fetch_votes","AddressList","DEFAULT_CONTRACT_CACHE_SIZE","DEFAULT_IDENTITY_NONCE_STALE_TIME_S","DEFAULT_QUORUM_PUBLIC_KEYS_CACHE_SIZE","LastQueryTimestamp","RequestSettings","Sdk","SdkBuilder","StalenessInSeconds","Uri","add","add_uri","authority","available","ban_failed_address","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","cancelled","clone","clone","clone_into","clone_into","connect_timeout","default","default","default","eq","eq","eq","equivalent","equivalent","equivalent","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_iter","from_maybe_shared","from_parts","from_ref","from_ref","from_request","from_request_parts","from_static","from_str","get_identity_contract_nonce","get_identity_nonce","get_live_address","hash","host","into","into","into","into","into_parts","into_request","into_request","into_request","into_request","is_empty","len","mock","new","new","new_mainnet","new_mock","new_mock","new_testnet","path","path_and_query","port","port_u16","prove","query","retries","scheme","scheme_str","set_context_provider","shutdown","start_instant_send_lock_stream","timeout","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","try_into_platform_versioned","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","wait_for_asset_lock_proof_for_transaction","with_cancellation_token","with_context_provider","with_core","with_dump_dir","with_settings","with_settings","with_version"],"q":[[0,"dash_sdk"],[38,"dash_sdk::error"],[97,"dash_sdk::mock"],[106,"dash_sdk::mock::provider"],[139,"dash_sdk::mock::sdk"],[159,"dash_sdk::platform"],[725,"dash_sdk::platform::block_info_from_metadata"],[726,"dash_sdk::platform::proto"],[2178,"dash_sdk::platform::proto::get_consensus_params_request"],[2227,"dash_sdk::platform::proto::get_consensus_params_response"],[2330,"dash_sdk::platform::proto::get_data_contract_history_request"],[2382,"dash_sdk::platform::proto::get_data_contract_history_response"],[2432,"dash_sdk::platform::proto::get_data_contract_history_response::get_data_contract_history_response_v0"],[2507,"dash_sdk::platform::proto::get_data_contract_request"],[2556,"dash_sdk::platform::proto::get_data_contract_response"],[2606,"dash_sdk::platform::proto::get_data_contract_response::get_data_contract_response_v0"],[2630,"dash_sdk::platform::proto::get_data_contracts_request"],[2679,"dash_sdk::platform::proto::get_data_contracts_response"],[2780,"dash_sdk::platform::proto::get_data_contracts_response::get_data_contracts_response_v0"],[2804,"dash_sdk::platform::proto::get_documents_request"],[2859,"dash_sdk::platform::proto::get_documents_request::get_documents_request_v0"],[2883,"dash_sdk::platform::proto::get_documents_response"],[2933,"dash_sdk::platform::proto::get_documents_response::get_documents_response_v0"],[2982,"dash_sdk::platform::proto::get_epochs_info_request"],[3033,"dash_sdk::platform::proto::get_epochs_info_response"],[3083,"dash_sdk::platform::proto::get_epochs_info_response::get_epochs_info_response_v0"],[3162,"dash_sdk::platform::proto::get_identities_contract_keys_request"],[3217,"dash_sdk::platform::proto::get_identities_contract_keys_response"],[3267,"dash_sdk::platform::proto::get_identities_contract_keys_response::get_identities_contract_keys_response_v0"],[3370,"dash_sdk::platform::proto::get_identity_balance_and_revision_request"],[3419,"dash_sdk::platform::proto::get_identity_balance_and_revision_response"],[3469,"dash_sdk::platform::proto::get_identity_balance_and_revision_response::get_identity_balance_and_revision_response_v0"],[3519,"dash_sdk::platform::proto::get_identity_balance_request"],[3568,"dash_sdk::platform::proto::get_identity_balance_response"],[3618,"dash_sdk::platform::proto::get_identity_balance_response::get_identity_balance_response_v0"],[3642,"dash_sdk::platform::proto::get_identity_by_public_key_hash_request"],[3691,"dash_sdk::platform::proto::get_identity_by_public_key_hash_response"],[3741,"dash_sdk::platform::proto::get_identity_by_public_key_hash_response::get_identity_by_public_key_hash_response_v0"],[3765,"dash_sdk::platform::proto::get_identity_contract_nonce_request"],[3815,"dash_sdk::platform::proto::get_identity_contract_nonce_response"],[3865,"dash_sdk::platform::proto::get_identity_contract_nonce_response::get_identity_contract_nonce_response_v0"],[3889,"dash_sdk::platform::proto::get_identity_keys_request"],[3941,"dash_sdk::platform::proto::get_identity_keys_response"],[3991,"dash_sdk::platform::proto::get_identity_keys_response::get_identity_keys_response_v0"],[4040,"dash_sdk::platform::proto::get_identity_nonce_request"],[4089,"dash_sdk::platform::proto::get_identity_nonce_response"],[4139,"dash_sdk::platform::proto::get_identity_nonce_response::get_identity_nonce_response_v0"],[4163,"dash_sdk::platform::proto::get_identity_request"],[4212,"dash_sdk::platform::proto::get_identity_response"],[4262,"dash_sdk::platform::proto::get_identity_response::get_identity_response_v0"],[4286,"dash_sdk::platform::proto::get_path_elements_request"],[4336,"dash_sdk::platform::proto::get_path_elements_response"],[4386,"dash_sdk::platform::proto::get_path_elements_response::get_path_elements_response_v0"],[4435,"dash_sdk::platform::proto::get_proofs_request"],[4486,"dash_sdk::platform::proto::get_proofs_request::get_proofs_request_v0"],[4568,"dash_sdk::platform::proto::get_proofs_request::get_proofs_request_v0::identity_request"],[4604,"dash_sdk::platform::proto::get_proofs_response"],[4654,"dash_sdk::platform::proto::get_proofs_response::get_proofs_response_v0"],[4677,"dash_sdk::platform::proto::get_protocol_version_upgrade_state_request"],[4725,"dash_sdk::platform::proto::get_protocol_version_upgrade_state_response"],[4775,"dash_sdk::platform::proto::get_protocol_version_upgrade_state_response::get_protocol_version_upgrade_state_response_v0"],[4850,"dash_sdk::platform::proto::get_protocol_version_upgrade_vote_status_request"],[4900,"dash_sdk::platform::proto::get_protocol_version_upgrade_vote_status_response"],[4950,"dash_sdk::platform::proto::get_protocol_version_upgrade_vote_status_response::get_protocol_version_upgrade_vote_status_response_v0"],[5025,"dash_sdk::platform::proto::key_request_type"],[5050,"dash_sdk::platform::proto::platform_client"],[5097,"dash_sdk::platform::proto::security_level_map"],[5131,"dash_sdk::platform::proto::wait_for_state_transition_result_request"],[5180,"dash_sdk::platform::proto::wait_for_state_transition_result_response"],[5230,"dash_sdk::platform::proto::wait_for_state_transition_result_response::wait_for_state_transition_result_response_v0"],[5254,"dash_sdk::platform::transition"],[5290,"dash_sdk::platform::transition::broadcast"],[5293,"dash_sdk::platform::transition::broadcast_request"],[5296,"dash_sdk::platform::transition::purchase_document"],[5300,"dash_sdk::platform::transition::put_contract"],[5304,"dash_sdk::platform::transition::put_document"],[5308,"dash_sdk::platform::transition::put_identity"],[5311,"dash_sdk::platform::transition::put_settings"],[5331,"dash_sdk::platform::transition::top_up_identity"],[5333,"dash_sdk::platform::transition::transfer_document"],[5337,"dash_sdk::platform::transition::update_price_of_document"],[5341,"dash_sdk::platform::transition::withdraw_from_identity"],[5343,"dash_sdk::platform::types"],[5346,"dash_sdk::platform::types::epoch"],[5370,"dash_sdk::platform::types::identity"],[5446,"dash_sdk::platform::types::version_votes"],[5448,"dash_sdk::sdk"],[5585,"rs_dapi_client::request_settings"],[5586,"core::fmt"],[5587,"core::fmt"],[5588,"tonic::request"],[5589,"platform_version::version::protocol_version"],[5590,"core::any"],[5591,"core::fmt"],[5592,"dashcore_rpc::error"],[5593,"dpp::errors::protocol_error"],[5594,"dashcore::merkle_tree::block"],[5595,"drive_proof_verifier::error"],[5596,"dashcore::error"],[5597,"platform_version::error"],[5598,"rs_dapi_client::dapi_client"],[5599,"core::fmt"],[5600,"core::error"],[5601,"core::option"],[5602,"alloc::string"],[5603,"alloc::vec"],[5604,"alloc::sync"],[5605,"core::hash"],[5606,"core::cmp"],[5607,"core::num::nonzero"],[5608,"std::path"],[5609,"alloc::collections::btree::map"],[5610,"core::cmp"],[5611,"core::iter::traits::collect"],[5612,"bitvec::slice"],[5613,"bitvec::order"],[5614,"dpp::data_contract::v0::data_contract"],[5615,"bincode::error"],[5616,"bincode::de"],[5617,"bech32"],[5618,"core::clone"],[5619,"core::cmp"],[5620,"grovedb::query"],[5621,"dpp::identity::identity_public_key::contract_bounds"],[5622,"platform_value::types::binary_data"],[5623,"bincode::de"],[5624,"platform_value"],[5625,"dpp::data_contract::document_type"],[5626,"dpp::data_contract::errors::contract"],[5627,"dpp::data_contract::document_type"],[5628,"core::iter::traits::collect"],[5629,"alloc::boxed"],[5630,"core::pin"],[5631,"rs_dapi_client::dapi_client"],[5632,"core::marker"],[5633,"dpp::data_contract::document_type::index"],[5634,"dpp::data_contract::created_data_contract"],[5635,"dpp::document::v0"],[5636,"dpp::identity::v0"],[5637,"dpp::state_transition::state_transitions::identity::public_key_in_creation::v0"],[5638,"dpp::state_transition::state_transitions::identity::public_key_in_creation"],[5639,"dpp::identity::identity_public_key::v0"],[5640,"drive::drive::config"],[5641,"platform_value::error"],[5642,"dpp::errors::consensus::consensus_error"],[5643,"dpp::validation::validation_result"],[5644,"serde_json::value"],[5645,"platform_value::string_encoding"],[5646,"dpp::identity::identity_public_key::purpose"],[5647,"dpp::identity::identity_public_key::security_level"],[5648,"std::collections::hash::set"],[5649,"dpp::identity::identity_public_key::key_type"],[5650,"core::hash"],[5651,"rand::rngs::std"],[5652,"core::convert"],[5653,"dpp::balances::credits"],[5654,"dpp::identity::signer"],[5655,"dpp::identity::state_transition::asset_lock_proof"],[5656,"dashcore::crypto::key"],[5657,"rs_dapi_client::transport"],[5658,"dashcore::hash_types::newtypes"],[5659,"grovedb_merk::proofs::query::query_item"],[5660,"core::default"],[5661,"core::iter::traits::collect"],[5662,"dpp::validation::operations"],[5663,"ciborium::value"],[5664,"dpp::prelude"],[5665,"bitvec::ptr::span"],[5666,"dpp::state_transition::state_transitions::document::documents_batch_transition::document_transition::document_create_transition"],[5667,"dpp::block::block_info"],[5668,"dpp::state_transition::state_transitions::document::documents_batch_transition::document_transition::document_create_transition::v0"],[5669,"dpp::state_transition::state_transitions::document::documents_batch_transition::document_transition::document_replace_transition"],[5670,"dpp::state_transition::state_transitions::document::documents_batch_transition::document_transition::document_replace_transition::v0"],[5671,"dpp::data_contract::serialized_version"],[5672,"dpp::state_transition"],[5673,"drive::query::ordering"],[5674,"drive::query::conditions"],[5675,"dashcore::address"],[5676,"bech32"],[5677,"bytes::buf::buf_mut"],[5678,"prost::encoding"],[5679,"prost::encoding"],[5680,"core::slice::iter"],[5681,"core::iter::adapters::cloned"],[5682,"core::iter::adapters::filter_map"],[5683,"tonic::codec::compression"],[5684,"bytes::bytes"],[5685,"tonic::status"],[5686,"http_body::combinators::box_body"],[5687,"tonic::client::service"],[5688,"tonic::response"],[5689,"tonic::request"],[5690,"tonic::transport::error"],[5691,"tonic::transport::channel::endpoint"],[5692,"core::convert"],[5693,"tonic::service::interceptor"],[5694,"http::request"],[5695,"http::response"],[5696,"tower_service"],[5697,"tonic::service::interceptor"],[5698,"rs_dapi_client::address_list"],[5699,"http::uri::authority"],[5700,"http::uri::builder"],[5701,"tokio_util::sync::cancellation_token"],[5702,"http::uri::path"],[5703,"http::uri"],[5704,"http::uri"],[5705,"http::uri::port"],[5706,"http::uri::scheme"],[5707,"dapi_grpc::core::v0"],[5708,"tonic::codec::decode"],[5709,"dashcore::blockdata::transaction"],[5710,"core::time"],[5711,"tokio_util::sync::cancellation_token"]],"d":["","DAPI request settings.","","","Version of the SDK","Ban DAPI address if node not responded or responded with …","","","","","Timeout for establishing a connection.","Dash Core SDK implementation.","","Create empty RequestSettings, which means no overrides …","","Define enums that will wrap multiple requests/responses …","Delegate the execution of a FromProof trait to an enum …","Delegate the execution of a transport request to the …","","Definitions of errors","Fill in settings defaults.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Mocking support for Dash SDK.","Combines two instances of RequestSettings with following …","Platform DAPI requests.","Number of retries until returning the last error.","Sdk entrypoint to Dash Platform.","Timeout for a request.","","","","","","","Operation cancelled - cancel token was triggered, timeout, …","Configuration error","SDK is not configured properly","Errors returned by the context provider","Context provider error","Core client error, for example, connection error","Dash core error","DAPI client error, for example, connection error","DAPI mocks error","Drive error","Epoch not found; we must have at least one epoch","Error type for the SDK","Generic Context provider error","Generic error","Data contract is invalid or not found, or some error …","Invalid Proved Response error","Provided quorum is invalid","MerkleBlockError","Dependency not found, for example data contract for a …","Proof verification error","DPP error","SDK operation timeout reached error","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Trait implemented by objects that can be used in mock …","Mocking support for messages.","Deserialize the object from expectations","Deserialize the message serialized with [mock_serialize()].","Serialize the object to save into expectations","Serialize the message to bytes for mocking purposes.","Example ContextProvider that uses the Core gRPC API to …","Mocking mechanisms for Dash Platform SDK.","Thread-safe cache of various objects inside the SDK.","Context provider that uses the Core gRPC API to fetch data …","","","","","Data contracts cache.","Directory where to store dumped data.","Returns the argument unchanged.","Returns the argument unchanged.","Get a reference to the value stored under <code>k</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create new context provider.","Create new cache","Insert a new value into the cache.","Quorum public keys cache.","Set the directory where to store dumped data.","Set the Sdk to use when fetching data from Platform. This …","","","","","","","","","","","Mechanisms to mock Dash Platform SDK.","","","","","Expect a Fetch request and return provided object.","Expect a FetchMany request and return provided object.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Load all expectations from files in a directory.","Define a directory where files containing quorum …","","","","","","","Interface between the Sdk and state of the application.","Default limit of epoch records returned by the platform.","Understanding Data Contract versioning Data contract …","","Request that is used to query documents from the Dash …","Drive query struct","Trait implemented by objects that can be fetched from the …","Fetch multiple objects from the Platform.","","The identity is not stored inside of drive, because of …","","Wrapper around query that allows to specify limit.","Mock ContextProvider that can read quorum keys from files.","Trait implemented by objects that can be used as queries.","Type of request used to fetch data from the platform.","Type of request used to fetch multiple objects from the …","","","","","","Add an identity public key","Add identity public keys","","","","","","","Returns the balance of the identity.","","","Block time","","","","","","","","","","","","","","","","","","","","","","","Sets the revision of the identity to +1.","","","","","","","","","","","","","","","","","","","","","","","","","Operations to construct a path query.","DataContract","","","","","","","","Data contract ID","","","","","","","Returns the default FeatureVersion for the latest platform …","Returns the default FeatureVersion for a given platform …","","","","","","","","","","","","","","","Document type","","","","Document type for the data contract","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch single object from the Platfom.","Fetch single object from the Platfom.","Fetch single object from the Platform by identifier.","Fetch single object from the Platform by identifier.","Fetch multiple objects from the Platform by their …","Fetch multiple objects from the Platform by their …","Fetch (or search) multiple objects on the Dash Platform","Fetch (or search) multiple objects on the Dash Platform","","Fetch multiple objects from the Platform with limit.","Fetch multiple objects from the Platform with limit.","Fetch single object from the Platfom.","Fetch single object from the Platfom.","Fetch single object from the Platfom.","Fetch single object from the Platfom.","Finds the best index for the query.","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Converts a query Value to a <code>DriveQuery</code>.","","Reads a serialized document and creates a Document from it.","","","Converts a query Value to a <code>DriveQuery</code>.","","Create a document from a platform value.","","","","","","","","","Converts a SQL expression to a <code>DriveQuery</code>.","","","Converts a query Value to a <code>DriveQuery</code>.","","","Generate data contract id based on owner id and identity …","Generates the document ID","Fetches the data contract for a specified data contract ID.","","Get first public key matching a purpose, security levels …","Returns a path query for non-primary keys given a document …","Returns a path query given a document type path and …","Returns a public key for a given id","Returns a public key for a given id","Get the biggest public KeyID","Fetches the public key for a specified quorum.","Mock implementation of ContextProvider that returns keys …","Return a value given the path to its key and the document …","Return a value given the path to its key for a document …","","","","","Computes the hash of an identity","","","","","Returns the identifier of the identity.","","","","Increase Identity balance","","Increment revision","","Internal clauses","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Convert the document to a map value consuming the document.","Convenience method to get Partial Identity Info","Convenience method to get Partial Identity Info","","","","","","","","","","","","Convert the document to a value consuming the document.","","","","Returns true if the query clause if for primary keys.","Checks if public key security level is MASTER","","Returns the latest FeatureVersion supported by the latest …","Returns the latest FeatureVersion supported by a given …","","queryset limit","Max number of records returned","Limit","","Generates an identity public key with the maximum possible …","","","","","","","","","","","","","","","","","Create a new instance of MockContextProvider.","Create new DocumentQuery for provided contract and …","","Create new document query for provided document type name …","Create new document query based on a DriveQuery.","Created a new identity based on asset locks and keys","Offset","Order by","<code>order_by</code> clauses for the query","","","","","","","","","","","","","","","","","Returns a reference to the public keys of the identity.","Returns a mutable reference to the public keys of the …","Consumes the <code>Identity</code> and returns the owned public keys.","","","","","","","","","","Converts the current instance into an instance of the …","","","","","","","","Get all keys for an identity with provided identifier.","","","","","Actual query to execute","Returns a <code>QueryItem</code> given a start key and query direction.","Set the directory where quorum keys are stored.","","","Generates a random authentication key and its …","Generates a random authentication key and its …","Generates a random authentication key based on the …","","","","Generates a random ECDSA critical-level authentication …","Generates a random ECDSA high-level authentication public …","Generates a random ECDSA high-level authentication public …","Generates a random ECDSA high-level authentication public …","Generates a random ECDSA master-level authentication …","Generates a random ECDSA master authentication public key …","Generates a specified number of random identities using …","Generates a specified number of random identities with …","Generates a specified number of random identities using …","Generates a random identity using the specified version …","Generates a random identity with main keys and their …","Generates a random identity using the specified version …","","Generates a random key based on the platform version.","Generates a random key based on the platform version.","","","","","","Reduce the Identity balance","","","","Returns the revision of the identity.","","","","","","","Serializes the document.","","","","Serializes and consumes the document.","","","","","","","","Sets the balance of the identity.","","","","","","","","","","","Sets the identifier of the identity.","","","","","","","Sets the public keys of the identity.","","","","Sets the revision of the identity.","","","","","","","","","","first object to start with","Start at","Operations to construct a path query.","Start at included","","","","","","Convert the document to a map value.","Convert the document to an object.","","","","","","","","","","","","","","","Convenience method to get underlying buffer as a vec","","","","","","","State transitions used to put changed objects to the Dash …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type-specific implementation for various dpp object types …","","","","","","","","","Verifies a proof for a collection of documents.","Verifies the given proof and returns the root hash of the …","Verifies if a document exists at the beginning of a proof, …","","","","","","","","","","","","","","","","","","","<code>where</code> clauses for the query","Point to a specific document ID.","Add order by clause to the query.","Add new where clause to the query.","","","Constructs a <code>BlockInfo</code> structure from the provided …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","String value of the enum field names used in the ProtoBuf …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>KeyPurpose</code>, or <code>None</code> if <code>value</code> is not a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an enum from field names used in the ProtoBuf …","Nested message and enum types in <code>GetConsensusParamsRequest</code>.","Nested message and enum types in <code>GetConsensusParamsResponse</code>…","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in <code>GetDataContractRequest</code>.","Nested message and enum types in <code>GetDataContractResponse</code>.","Nested message and enum types in <code>GetDataContractsRequest</code>.","Nested message and enum types in <code>GetDataContractsResponse</code>.","Nested message and enum types in <code>GetDocumentsRequest</code>.","Nested message and enum types in <code>GetDocumentsResponse</code>.","Nested message and enum types in <code>GetEpochsInfoRequest</code>.","Nested message and enum types in <code>GetEpochsInfoResponse</code>.","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in <code>GetIdentityBalanceRequest</code>.","Nested message and enum types in <code>GetIdentityBalanceResponse</code>…","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in <code>GetIdentityKeysRequest</code>.","Nested message and enum types in <code>GetIdentityKeysResponse</code>.","Nested message and enum types in <code>GetIdentityNonceRequest</code>.","Nested message and enum types in <code>GetIdentityNonceResponse</code>.","Nested message and enum types in <code>GetIdentityRequest</code>.","Nested message and enum types in <code>GetIdentityResponse</code>.","Nested message and enum types in <code>GetPathElementsRequest</code>.","Nested message and enum types in <code>GetPathElementsResponse</code>.","Nested message and enum types in <code>GetProofsRequest</code>.","Nested message and enum types in <code>GetProofsResponse</code>.","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in …","Nested message and enum types in …","Returns the enum value for the corresponding key in …","","","","Inserts a key value pair into <code>security_level_map</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>KeyPurpose</code>.","","Nested message and enum types in <code>KeyRequestType</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>SecurityLevelMap</codeested message and enum types in …","Nested message and enum types in …","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","","Returns the encoded length of the message without a length …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","Returns the encoded length of the message without a length …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in <code>GetDataContractResponseV0</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","","Returns the encoded length of the message without a length …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Nested message and enum types in <code>GetDataContractsResponseV0</code>…","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in <code>GetDocumentsRequestV0</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in <code>GetDocumentsResponseV0</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in <code>GetEpochsInfoResponseV0</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","Returns the encoded length of the message without a length …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>document_type_name</code>, or the default …","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","Returns an iterator which yields the valid enum values …","","Appends the provided enum value to <code>purposes</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","","Returns the encoded length of the message without a length …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Decodes an instance of the message from a buffer, and …","","","","","","","Returns the enum value of <code>purpose</code>, or the default if the …","","","","","","Sets <code>purpose</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in <code>GetIdentityKeysResponseV0</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in <code>GetIdentityNonceResponseV0</code>…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in <code>GetIdentityResponseV0</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in <code>GetPathElementsResponseV0</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in <code>GetProofsRequestV0</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Nested message and enum types in <code>IdentityRequest</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns the enum value of <code>request_type</code>, or the default if …","","","","","Sets <code>request_type</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Creates an enum from field names used in the ProtoBuf …","","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in <code>GetProofsResponseV0</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","Returns the encoded length of the message without a length …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Nested message and enum types in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","Returns the encoded length of the message without a length …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>KeyKindRequestType</code>, or <code>None</code> if <code>value</code> …","","Creates an enum from field names used in the ProtoBuf …","","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if <code>value</code> is a variant of <code>KeyKindRequestType</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","Returns the encoded length of the message without a length …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","Nested message and enum types in …","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","State transition identifier","","","","","","Broadcast trait representing the action of broadcasting a …","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks if the state transition is confirmed","","","","","","","","","","","","","","","","","","","","","","","Trait implemented by objects that can be used to broadcast …","Converts the current instance into an instance of the …","","A trait for purchasing a document on Platform","Tries to purchase a document on platform Setting settings …","Tries to purchase a document on platform and waits for the …","Waits for the response of a state transition after it has …","A trait for putting a contract to platform","Puts a document on platform setting settings to <code>None</code> sets …","Puts a contract on platform and waits for the confirmation …","Waits for the response of a state transition after it has …","A trait for putting a document to platform","Puts a document on platform setting settings to <code>None</code> sets …","Puts an identity on platform and waits for the …","Waits for the response of a state transition after it has …","A trait for putting an identity to platform","Puts an identity on platform","Puts an identity on platform and waits for the …","The options when putting something to platform","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A trait for transferring a document on Platform","Transfers a document on platform Setting settings to <code>None</code> …","Transfers a document on platform and waits for the response","Waits for the response of a state transition after it has …","A trait for updating the price of a document on Platform","Updates the price of a document on platform Setting …","Updates the price of a document on platform and waits for …","Waits for the response of a state transition after it has …","","Function to withdraw credits from an identity. Returns the …","Epoch-related types and helpers","Identity related types and functions","Helpers for managing platform version votes","Query used to fetch multiple epochs from the platform.","Helper trait for managing Epoch information","Sort order. Default is ascending (true), which means that …","","","","","","Fetch current (the latest) epoch from the platform.","Fetch current (the latest) epoch from the platform with …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Starting number of epoch to fetch.","","","","","","","","","","","Wrapper around multiple requests for one object type.","Wrapper around multiple responses for one object type.","Public key hash that can be used as a Query to find an …","Unknown or unsupported request type.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","TODO: Not sure how to do that","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper trait for managing MasternodeProtocolVote objects","Fetch masternode votes for version update from the …","A structure to manage DAPI addresses to select from for …","How many data contracts fit in the cache.","The default identity nonce stale time in seconds","How many quorum public keys fit in the cache.","The last query timestamp","DAPI request settings.","Dash Platform SDK","Dash Platform SDK Builder, used to configure and …","a type to represent staleness in seconds","The URI component of a request.","Adds a node Address to AddressList Returns false if the …","Add a node Address to AddressList by Uri. Returns false if …","Get the authority of this <code>Uri</code>.","Get number of available, not banned addresses.","Ban DAPI address if node not responded or responded with …","","","","","","","","","Build the Sdk instance.","Creates a new builder-style object to manufacture a <code>Uri</code>.","Returns a future that resolves when the Sdk is cancelled …","","","","","Timeout for establishing a connection.","","Create default SdkBuilder that will create a mock client.","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Attempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.","Attempt to convert a <code>Parts</code> into a <code>Uri</code>.","","","","","Convert a <code>Uri</code> from a static string.","","Updates or fetches the nonce for a given identity and …","Updates or fetches the nonce for a given identity from the …","Randomly select a not banned address.","","Get the host of this <code>Uri</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert a <code>Uri</code> into <code>Parts</code>.","","","","","Check if the list is empty. Returns true if there are no …","Get number of all addresses, both banned and not banned.","Returns a mutable reference to the <code>MockDashPlatformSdk</code> …","Creates an empty AddressList with default base ban time.","Create a new SdkBuilder with provided address list.","Create a new SdkBuilder instance preconfigured mainnet …","Create a new SdkBuilder that will generate mock client.","Initialize Dash Platform  SDK in mock mode.","Create a new SdkBuilder instance preconfigured for …","Get the path of this <code>Uri</code>.","Returns the path &amp; query components of the Uri","Get the port part of this <code>Uri</code>.","Get the port of this <code>Uri</code> as a <code>u16</code>.","Indicate if the sdk should request and verify proofs.","Get the query string of this <code>Uri</code>, starting after the <code>?</code>.","Number of retries until returning the last error.","Get the scheme of this <code>Uri</code>.","Get the scheme of this <code>Uri</code> as a <code>&amp;str</code>.","Set the ContextProvider to use.","Request shutdown of the Sdk and all related operation.","Starts the stream to listen for instant send lock messages","Timeout for a request.","","","","","","","","","","","","","","","","","","","","","","","","","","","Return Dash Platform version information used by this SDK.","","","","","Waits for a response for the asset lock proof","Set cancellation token that will be used by the Sdk.","Configure context provider to use.","Use Dash Core as a wallet and context provider.","Configure directory where dumps of all requests and …","Creates an empty AddressList with adjustable base ban time.","Configure request settings.","Configure platform version."],"i":[0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,11,10,11,0,11,11,11,11,11,11,11,0,10,11,10,11,10,11,11,11,11,11,10,11,10,11,10,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,10,11,10,11,10,11,10,11,10,11,10,11,0,0,0,29,30,29,30,0,0,0,0,36,32,36,32,36,36,36,32,32,36,36,36,32,36,32,36,32,32,36,36,36,36,32,36,32,36,32,36,32,36,32,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,50,0,38,64,53,54,53,53,37,37,37,37,38,38,53,37,0,70,77,67,68,70,37,38,64,53,54,37,53,54,77,67,68,70,37,38,64,53,54,64,53,37,38,67,68,70,37,38,64,53,54,67,68,70,37,38,64,53,54,37,54,37,54,38,38,70,70,54,53,64,64,64,0,54,67,54,37,53,54,77,37,53,53,53,54,67,37,38,64,53,54,53,54,53,54,54,38,70,38,38,38,67,38,38,38,38,38,38,38,0,37,53,54,37,37,70,37,37,37,37,38,64,53,54,37,37,37,54,54,54,67,67,38,47,47,47,47,50,50,50,50,64,50,50,47,47,47,47,70,77,67,68,70,37,37,38,64,64,53,54,77,67,67,67,68,68,68,70,37,37,38,38,38,64,64,53,53,54,54,54,54,54,54,70,37,64,64,64,70,38,64,67,68,70,37,38,64,53,54,70,37,37,70,38,37,38,64,107,77,53,70,70,53,53,53,107,77,64,64,38,37,38,64,53,54,54,38,64,53,54,38,64,53,64,53,38,70,77,67,68,70,37,38,64,53,54,37,64,53,53,77,67,68,70,37,38,64,53,54,38,38,64,54,37,64,70,54,54,53,53,37,67,68,70,54,54,38,64,53,53,53,38,38,67,67,38,64,53,67,38,64,53,77,67,37,67,67,53,70,70,67,38,64,64,37,54,37,53,54,53,54,53,54,64,64,64,0,53,53,53,64,64,54,38,64,53,38,64,53,46,67,68,68,68,68,70,37,37,37,37,37,37,68,70,77,37,54,54,54,54,54,54,54,54,54,54,54,54,54,53,53,53,53,53,53,54,54,54,54,54,54,37,54,53,54,67,64,53,38,38,54,67,37,38,64,64,53,54,64,53,54,38,64,53,54,38,53,38,64,64,64,54,54,38,38,38,64,53,54,54,38,38,64,64,53,54,54,64,53,38,54,64,64,64,64,64,64,38,67,70,70,70,37,64,64,38,37,64,64,67,68,70,37,38,64,53,54,37,37,64,37,38,38,37,53,64,64,64,64,64,0,37,77,67,68,70,70,37,37,37,37,37,37,38,64,53,54,64,64,64,64,64,64,38,53,53,64,64,77,67,68,70,37,38,64,53,54,77,67,68,70,37,38,64,53,54,77,67,68,70,37,38,64,53,54,0,64,64,64,64,64,38,38,38,70,70,70,38,38,38,38,77,67,68,70,37,38,64,53,54,38,64,64,64,64,67,67,67,67,53,37,0,0,154,0,0,154,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,154,0,0,154,155,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,115,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,154,156,154,115,156,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,115,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,154,154,154,157,159,132,160,133,129,130,172,131,177,128,180,182,184,186,188,127,124,157,159,132,160,133,129,130,172,131,177,128,180,182,184,186,188,127,124,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,155,115,156,157,158,159,159,132,132,160,160,133,133,129,129,161,161,162,162,163,163,164,164,165,165,166,167,168,169,170,130,130,171,171,172,172,173,173,174,174,175,175,131,131,176,176,177,177,178,178,128,128,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,187,188,188,189,189,127,127,190,190,124,191,191,192,192,193,193,154,154,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,155,154,115,170,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,154,168,0,156,161,162,163,164,165,171,173,175,176,178,179,181,183,185,189,190,191,193,157,159,132,160,133,129,130,172,131,177,128,180,182,184,186,188,127,124,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,0,161,162,163,164,165,171,173,175,176,178,179,181,183,185,189,190,191,193,161,162,163,164,165,171,173,175,176,178,179,181,183,185,189,190,191,193,115,169,157,159,132,160,133,129,130,172,131,177,128,180,182,184,186,188,127,124,155,155,166,155,0,170,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,155,157,115,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,154,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,159,132,160,133,129,161,162,163,164,165,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,155,115,156,157,158,159,132,160,133,129,161,162,163,164,165,166,167,168,169,170,130,171,172,173,174,175,131,176,177,178,128,179,180,181,182,183,184,185,186,187,188,189,127,190,124,191,192,193,154,0,0,0,233,0,232,233,232,233,232,232,233,232,233,232,232,233,233,232,233,232,233,232,233,232,233,232,233,232,232,233,232,233,233,232,232,232,232,233,232,233,232,233,232,233,232,233,232,233,232,233,0,0,0,241,0,240,238,239,240,241,238,239,240,241,238,239,240,238,239,240,241,238,239,240,241,238,239,240,238,239,240,241,241,238,239,240,241,238,239,240,241,240,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,239,239,238,239,238,241,238,239,240,238,239,240,238,239,240,241,238,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,0,242,0,214,242,214,242,214,214,242,214,242,214,214,242,242,214,242,214,242,214,242,214,242,214,242,214,214,242,214,242,214,242,214,214,214,214,214,242,214,214,242,214,242,214,242,214,242,214,242,214,242,0,243,0,215,243,215,243,215,215,243,215,243,215,215,243,243,215,243,215,243,215,243,215,243,215,243,0,215,243,215,243,243,215,215,215,215,215,243,215,243,215,243,215,243,215,243,215,243,215,243,0,246,0,246,0,244,245,246,244,245,246,244,245,244,245,246,244,245,246,245,244,244,245,244,245,246,246,244,245,246,244,245,246,244,245,246,244,245,246,244,245,246,244,245,246,244,245,246,246,244,245,244,245,244,245,246,244,245,246,244,245,246,244,245,246,244,245,246,244,245,246,244,244,245,246,0,247,0,210,247,210,247,210,210,247,210,247,210,210,247,247,210,247,210,247,210,247,210,247,210,247,210,210,247,210,247,247,210,210,210,210,247,210,247,210,247,210,247,210,247,210,247,210,247,0,248,0,211,248,211,248,211,211,248,211,248,211,211,248,248,211,248,211,248,211,248,211,248,211,248,0,211,248,211,248,248,211,211,211,211,211,248,211,248,211,248,211,248,211,248,211,248,211,248,249,249,0,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,0,250,0,212,250,212,250,212,212,250,212,250,212,212,250,250,212,250,212,250,212,250,212,250,212,250,212,212,250,212,250,250,212,212,212,212,250,212,250,212,250,212,250,212,250,212,250,212,250,0,0,0,253,0,251,252,213,253,251,252,213,253,251,252,213,251,252,213,253,251,252,213,253,251,252,251,252,213,251,252,213,253,253,251,252,213,253,251,252,213,253,251,252,213,253,251,252,213,253,251,252,213,253,0,251,251,252,213,253,251,252,213,253,253,213,251,252,213,251,252,213,213,251,252,213,253,251,252,213,253,251,252,213,253,251,252,213,253,251,252,213,253,251,252,213,253,251,252,213,253,254,254,0,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,0,255,0,216,255,216,255,216,216,255,216,255,216,216,216,255,216,255,216,255,216,255,216,255,216,255,216,255,0,216,255,216,255,216,255,216,216,216,216,216,255,216,216,255,216,255,216,255,216,255,216,255,216,255,216,0,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,0,257,0,217,257,217,257,217,217,257,217,257,217,217,257,257,217,257,217,257,217,257,217,257,217,257,0,217,257,217,257,257,217,217,217,217,217,257,217,257,217,257,217,257,217,257,217,257,217,257,0,259,259,0,258,259,258,259,258,258,259,258,259,258,258,259,258,259,258,259,258,259,258,259,258,259,258,259,258,259,258,259,259,258,258,258,259,258,259,258,259,258,259,258,259,258,259,258,259,0,261,0,260,260,261,260,261,260,260,261,260,261,260,260,260,261,261,260,261,260,261,260,261,260,261,260,261,260,261,260,261,261,260,260,260,260,261,260,260,261,260,261,260,261,260,261,260,261,260,261,0,262,0,226,262,226,262,226,226,262,226,262,226,226,262,262,226,262,226,262,226,262,226,262,226,262,0,226,262,226,262,262,226,226,226,226,226,262,226,262,226,262,226,262,226,262,226,262,226,262,0,0,265,265,0,263,264,265,263,264,265,263,264,263,264,265,263,264,265,263,264,263,264,265,265,263,264,265,263,263,264,265,264,264,264,263,264,265,263,264,265,263,264,265,263,264,265,263,264,265,265,263,264,263,264,264,264,263,264,265,264,263,264,265,263,264,265,263,264,265,263,264,265,263,264,265,263,264,265,0,266,0,206,266,206,266,206,206,266,206,266,206,206,206,266,206,206,266,206,266,206,266,206,266,206,266,206,266,206,206,266,206,266,266,206,206,206,206,206,206,206,266,206,266,206,266,206,266,206,266,206,266,206,266,0,270,0,207,270,207,270,207,207,270,207,270,207,207,270,270,207,270,207,270,207,270,207,270,207,270,0,207,270,207,270,270,207,207,207,207,207,270,207,270,207,270,207,270,207,270,207,270,207,270,0,274,0,274,0,0,271,272,273,274,271,272,273,274,271,272,273,271,272,273,274,271,272,273,274,271,272,273,271,272,273,274,274,271,272,273,274,273,271,272,273,274,271,272,273,274,271,272,273,274,271,272,273,274,272,271,272,273,274,271,272,273,274,272,271,274,271,272,273,271,272,273,271,271,271,272,273,274,271,271,272,273,274,271,272,273,274,271,272,273,274,271,272,273,274,271,272,273,274,271,272,273,274,0,275,0,198,275,198,275,198,198,275,198,275,198,198,275,275,198,275,198,275,198,275,198,275,198,275,198,198,275,198,275,275,198,198,198,198,275,198,275,198,275,198,275,198,275,198,275,198,275,0,276,0,203,276,203,276,203,203,276,203,276,203,203,276,276,203,276,203,276,203,276,203,276,203,276,0,203,276,203,276,276,203,203,203,203,203,276,203,276,203,276,203,276,203,276,203,276,203,276,0,278,278,0,277,277,278,277,278,277,277,278,277,278,277,277,278,278,277,278,277,278,277,278,277,278,277,278,277,278,277,278,278,277,277,277,277,278,277,278,277,278,277,278,277,278,277,278,277,278,0,279,0,197,279,197,279,197,197,279,197,279,197,197,279,279,197,279,197,279,197,279,197,279,197,279,197,197,279,197,279,279,197,197,197,197,279,197,279,197,279,197,279,197,279,197,279,197,279,0,280,0,202,280,202,280,202,202,280,202,280,202,202,280,280,202,280,202,280,202,280,202,280,202,280,0,202,280,202,280,280,202,202,202,202,202,280,202,280,202,280,202,280,202,280,202,280,202,280,281,281,0,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,0,282,0,218,282,218,282,218,218,282,218,282,218,218,282,282,218,282,218,282,218,282,218,282,218,282,218,282,218,282,282,218,218,218,218,218,282,218,282,218,282,218,282,218,282,218,282,218,282,0,283,0,219,283,219,283,219,219,283,219,283,219,219,283,283,219,283,219,283,219,283,219,283,219,283,0,219,283,219,283,283,219,219,219,219,219,283,219,283,219,283,219,283,219,283,219,283,219,283,284,284,0,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,0,285,0,196,285,196,285,196,196,285,196,285,196,196,196,285,285,196,285,196,285,196,285,196,285,196,285,196,196,285,196,285,285,196,196,196,196,285,196,285,196,285,196,285,196,285,196,285,196,285,0,286,0,201,286,201,286,201,201,286,201,286,201,201,286,286,201,286,201,286,201,286,201,286,201,286,0,201,286,201,286,286,201,201,201,201,201,286,201,286,201,286,201,286,201,286,201,286,201,286,287,287,0,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,0,288,0,204,288,204,288,204,204,288,204,288,204,204,288,288,204,288,204,288,204,288,204,288,204,288,204,204,288,204,288,204,288,204,204,204,204,204,204,288,204,288,204,288,204,288,204,288,204,288,204,288,0,289,0,205,289,205,289,205,205,289,205,289,205,205,289,289,205,289,205,289,205,289,205,289,205,289,0,205,289,205,289,289,205,205,205,205,205,289,205,289,205,289,205,289,205,289,205,289,205,289,0,291,291,0,290,291,290,291,290,290,291,290,291,290,290,291,291,290,291,290,291,290,291,290,291,290,291,290,291,290,291,290,291,290,290,290,291,290,291,290,291,290,291,290,291,290,291,290,291,0,292,0,195,292,195,292,195,195,292,195,292,195,195,292,292,195,292,195,292,195,292,195,292,195,292,195,195,292,195,292,292,195,195,195,195,292,195,292,195,292,195,292,195,292,195,292,195,292,0,293,0,200,293,200,293,200,200,293,200,293,200,200,293,293,200,293,200,293,200,293,200,293,200,293,0,200,293,200,293,293,200,200,200,200,200,293,200,293,200,293,200,293,200,293,200,293,200,293,294,294,0,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,0,295,0,194,295,194,295,194,194,295,194,295,194,194,295,295,194,295,194,295,194,295,194,295,194,295,194,194,295,194,295,295,194,194,194,194,295,194,295,194,295,194,295,194,295,194,295,194,295,0,296,0,199,296,199,296,199,199,296,199,296,199,199,296,296,199,296,199,296,199,296,199,296,199,296,0,199,296,199,296,296,199,199,199,199,199,296,199,296,199,296,199,296,199,296,199,296,199,296,297,297,0,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,0,298,0,227,298,227,298,227,227,298,227,298,227,227,298,298,227,298,227,298,227,298,227,298,227,298,227,298,227,298,227,298,227,227,227,227,227,298,227,298,227,298,227,298,227,298,227,298,227,298,0,299,0,228,299,228,299,228,228,299,228,299,228,228,299,299,228,299,228,299,228,299,228,299,228,299,0,228,299,228,299,299,228,228,228,228,228,299,228,299,228,299,228,299,228,299,228,299,228,299,0,301,301,0,300,301,300,301,300,300,301,300,301,300,300,301,300,301,300,301,300,301,300,301,300,301,300,301,300,301,300,301,301,300,300,300,301,300,301,300,301,300,301,300,301,300,301,300,301,0,302,0,208,302,208,302,208,208,302,208,302,208,208,208,302,208,302,208,302,208,302,208,302,208,302,208,302,0,208,208,302,208,302,302,208,208,208,302,208,302,208,302,208,302,208,302,208,302,208,302,0,0,0,303,304,305,303,304,305,303,304,305,303,304,305,303,304,305,303,305,303,304,305,303,304,305,303,303,303,303,304,305,303,304,305,303,304,305,303,304,305,303,304,305,304,0,303,304,305,303,304,305,303,304,305,303,304,305,304,304,303,304,305,304,303,304,305,303,304,305,303,304,305,303,304,305,303,304,305,303,304,305,306,306,306,306,0,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,0,307,0,209,307,209,307,209,209,307,209,307,209,209,307,307,209,307,209,307,209,307,209,307,209,307,0,209,307,209,307,307,209,209,209,209,209,307,209,307,209,307,209,307,209,307,209,307,209,307,308,0,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,0,309,0,222,309,222,309,222,222,309,222,309,222,222,309,309,222,309,222,309,222,309,222,309,222,309,222,309,222,309,309,222,222,222,222,309,222,309,222,309,222,309,222,309,222,309,222,309,0,310,0,223,310,223,310,223,223,310,223,310,223,223,310,310,223,310,223,310,223,310,223,310,223,310,0,223,310,223,310,310,223,223,223,223,223,310,223,310,223,310,223,310,223,310,223,310,223,310,313,0,0,0,313,311,312,313,311,312,313,311,312,311,312,313,311,312,313,311,312,311,312,313,313,311,312,313,311,312,313,311,312,313,311,312,313,311,312,313,311,312,313,311,312,313,313,311,312,311,312,311,312,313,311,312,313,311,312,313,311,312,313,311,312,313,311,312,313,312,311,312,311,312,313,0,314,0,224,314,224,314,224,224,314,224,314,224,224,224,314,314,224,314,224,314,224,314,224,314,224,314,224,314,224,314,314,224,224,224,224,314,224,224,314,224,314,224,314,224,314,224,314,224,314,0,315,0,225,315,225,315,225,225,315,225,315,225,225,315,315,225,315,225,315,225,315,225,315,225,315,0,225,315,225,315,315,225,225,225,225,225,315,225,315,225,315,225,315,225,315,225,315,225,315,318,0,0,0,318,316,317,318,316,317,318,316,317,316,317,318,316,317,318,316,317,316,317,318,318,316,317,318,316,317,318,316,317,318,316,317,318,316,317,318,316,317,318,316,317,318,318,316,317,316,317,317,316,317,318,316,317,318,316,317,318,316,317,318,316,317,318,316,317,318,317,316,316,317,318,319,0,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,0,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,230,230,0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,341,0,0,220,341,220,341,220,220,341,220,341,220,220,341,341,220,341,220,341,220,341,220,341,220,341,220,341,220,341,341,220,220,220,220,341,220,220,341,220,341,220,341,220,341,220,341,220,341,342,0,0,221,342,221,342,221,221,342,221,342,221,221,342,342,221,342,221,342,221,342,221,342,221,342,221,342,221,342,342,221,221,221,221,221,342,221,342,221,342,221,342,221,342,221,342,221,342,0,343,343,0,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,379,0,0,379,344,379,344,0,0,379,344,344,379,344,379,344,344,0,0,0,0,0,0,0,379,344,379,344,379,344,379,344,0,379,344,0,0,345,345,0,346,346,0,347,347,347,0,348,348,348,0,349,349,349,0,350,350,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,351,0,352,352,352,0,353,353,353,0,354,0,0,0,0,0,125,125,125,125,125,125,380,380,125,125,125,125,125,125,125,125,125,125,125,125,125,125,134,356,134,356,0,0,0,356,134,356,357,134,356,357,134,356,357,134,356,357,356,134,356,357,357,357,357,134,134,134,356,357,134,134,134,356,356,356,356,357,134,356,357,134,356,357,134,356,357,134,134,356,134,356,134,357,134,356,134,356,357,134,356,357,134,356,357,134,356,357,134,356,357,134,356,357,0,381,0,0,0,0,0,0,0,0,0,0,358,358,339,358,1,358,361,41,339,358,361,41,339,361,339,41,41,339,41,339,1,358,361,339,339,339,339,339,339,339,41,41,358,41,339,339,358,358,361,41,339,339,339,358,339,339,41,339,339,339,339,339,41,41,358,339,339,358,361,41,339,339,358,361,41,339,358,358,41,358,361,361,361,41,361,339,339,339,339,41,339,1,339,339,41,41,41,1,41,339,339,358,361,41,339,339,339,339,339,339,339,339,358,361,41,339,358,361,41,339,358,361,41,339,41,358,361,41,339,41,361,361,361,361,358,361,361],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],0,0,0,[[],1],[[],1],0,0,0,0,0,[1,3],[[1,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],0,[[1,1],1],0,0,0,0,[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,4],[[6,[2,5]]]],[[10,4],[[6,[2,5]]]],[[11,4],12],[[11,4],12],[-1,-1,[]],[13,11],[10,11],[14,11],[15,11],[-1,-1,[]],[16,11],[17,11],[18,11],[19,11],[[[20,[-1]]],11,21],[22,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[11,[[24,[23]]]],[-1,25,[]],[-1,25,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[26,[28,[27]]],29],[[[28,[27]]],[[24,[30]]]],[[29,26],[[31,[27]]]],[30,[[24,[[31,[27]]]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-1,[]],[-1,-1,[]],[[[32,[-1,-2]],-1],[[24,[[33,[-2]]]]],[34,35],[]],[[36,37],[[6,[[24,[[33,[38]]]],10]]]],[[36,39,[40,[27]],39],[[6,[[40,[27]],10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[41]],42,43,42,42,44,44],[[6,[36,11]]]],[44,[[32,[-1,-2]]],[34,35],[]],[[[32,[-1,-2]],-1,-2],2,[34,35],[]],0,[[36,[24,[45]]],2],[[36,[24,[41]]],2],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[[-1,-2],2,[],[]],[[26,-1,[24,[-2]]],[[6,[26,11]]],46,[47,29]],[[26,-1,[24,[[48,[-2,[24,[-3]]]]]]],[[6,[26,11]]],46,49,[[50,[-2]]]],[[26,4],12],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[26,-1],[[6,[26,11]]],[[52,[51]]]],[[26,-1],26,[[52,[51]]]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[53,54],2],[[53,-1],2,[[56,[],[[55,[54]]]]]],[-1,[[57,[-2,-3]]],[],[],58],[37,[[40,[27]]]],[37,[[28,[27]]]],[37,[[28,[27]]]],[38,[[24,[59]]]],[38,[[24,[59]]]],[53,60],[-1,61,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[37,62]]],63],[-1,[[6,[53,62]]],63],[-1,[[6,[54,62]]],63],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,2],[53,2],[-1,[[6,[[31,[65]]]]],[]],[[39,43],[[6,[66,15]]]],[67,67],[[[68,[-1]]],[[68,[-1]]],69],[70,70],[37,37],[38,38],[64,64],[53,53],[54,54],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[37,37],71],[[54,54],71],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[38,72],[38,72],[[70,[24,[64]],8],[[6,[73,22]]]],0,[54,[[24,[74]]]],[[[40,[27]],8],[[6,[53,15]]]],[64,[[24,[60]]]],[64,[[24,[60]]]],[64,[[24,[39]]]],0,[54,75],0,[54,75],[-1,[[6,[37,62]]],76],[-1,[[6,[53,62]]],76],[-1,[[6,[54,62]]],76],[[],77],[[],37],[[],43],[8,43],[8,[[6,[53,15]]]],[8,[[6,[54,15]]]],[-1,[[6,[67]]],78],[-1,[[6,[37]]],78],[-1,[[6,[38]]],78],[-1,[[6,[64]]],78],[-1,[[6,[53]]],78],[-1,[[6,[54]]],78],[[[28,[27]]],[[6,[53,15]]]],[[[28,[27]]],[[6,[54,15]]]],[[[28,[27]]],[[6,[53,15]]]],[[[28,[27]]],[[6,[54,15]]]],[54,[[24,[60]]]],[38,[[48,[25,79]]]],0,[[38,42],[[6,[80,81]]]],[[38,42],[[24,[80]]]],[[38,42],[[6,[82,81]]]],0,[[38,42],[[24,[82]]]],[[38,42],[[40,[[28,[27]]]]]],[38,[[48,[25,80]]]],[38,[[48,[25,80]]]],[38,[[40,[[28,[27]]]]]],[[38,42],[[40,[[28,[27]]]]]],[[38,42,[28,[27]]],[[40,[[28,[27]]]]]],0,[[37,-1],[[6,[2,83]]],84],[[53,-1],[[6,[2,83]]],84],[[54,-1],[[6,[2,83]]],84],[-1,-2,[],[[86,[85]]]],[-1,-2,[],[[86,[85]]]],[[70,70],66],[[37,[40,[27]]],66],[[37,37],66],[[37,37],66],[[37,[40,[27]]],66],[[38,38],66],[[64,64],66],[[53,53],66],[[54,54],66],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[67,-1,3],[[91,[[6,[-2]]]]],[],[]],[38,43],[[41,-2],[[89,[[88,[87]]]]],[],[[46,[-1]]]],[[41,-2],[[89,[[88,[87]]]]],[],[[46,[-1]]]],[[41,37],[[89,[[88,[87]]]]]],[[41,37],[[89,[[88,[87]]]]]],[[41,-1],[[89,[[88,[87]]]]],[[56,[],[[55,[37]]]],92]],[[41,-1],[[89,[[88,[87]]]]],[[56,[],[[55,[37]]]],92]],[[41,-2],[[89,[[88,[87]]]]],[],[[46,[-1]]]],[[41,-2],[[89,[[88,[87]]]]],[],[[46,[-1]]]],[[41,-2],[[89,[[88,[87]]]]],[],[[46,[-1]]]],[[41,-2,39],[[89,[[88,[87]]]]],[],[[46,[-1]]]],[[41,-2,39],[[89,[[88,[87]]]]],[],[[46,[-1]]]],[[41,-2,[24,[1]]],[[89,[[88,[87]]]]],[],[[46,[-1]]]],[[41,-2,[24,[1]]],[[89,[[88,[87]]]]],[],[[46,[-1]]]],[[41,-2,1],[[89,[[88,[87]]]]],[],[[46,[-1]]]],[[41,-2,1],[[89,[[88,[87]]]]],[],[[46,[-1]]]],[[70,8],[[6,[93,22]]]],[[77,4],[[6,[2,5]]]],[[67,4],12],[[[68,[-1]],4],12,21],[[70,4],[[6,[2,5]]]],[[37,4],[[6,[2,5]]]],[[37,4],[[6,[2,5]]]],[[38,4],[[6,[2,5]]]],[[64,4],[[6,[2,5]]]],[[64,4],[[6,[2,5]]]],[[53,4],[[6,[2,5]]]],[[54,4],[[6,[2,5]]]],[-1,-1,[]],[70,67],[-1,-1,[]],[70,67],[-1,-1,[]],[-1,[[68,[-1]]],[]],[94,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[40,[27]]],37],[95,38],[-1,-1,[]],[59,38],[-1,-1,[]],[96,64],[97,53],[-1,-1,[]],[98,54],[99,54],[100,54],[99,54],[98,54],[-1,-1,[]],[[[48,[25,79]],38,82,101],[[6,[70,22]]]],[[[28,[27]]],[[6,[37,102]]]],[[[28,[27]],82,8],[[6,[64,15]]]],[[[28,[27]],82,8],[[6,[[104,[64,103]],15]]]],[[[28,[27]],[24,[[40,[27]]]],[24,[[40,[27]]]],8],[[6,[64,15]]]],[[79,[24,[79]],[24,[43]],[24,[[40,[27]]]],66,[24,[60]],38,82,101],[[6,[70,22]]]],[[105,66,8],[[6,[38,15]]]],[[79,8],[[6,[64,15]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[42,38,[24,[101]]],[[6,[70,22]]]],[[42,106],[[6,[37,102]]]],[[42,[24,[42]]],[[6,[37,102]]]],[[79,38,82,101],[[6,[70,22]]]],[[79,66,8],[[6,[38,15]]]],[[[31,[27]]],[[6,[37,102]]]],[[-1,60],37,[[52,[[28,[27]]]]]],[[37,37,42,[28,[27]]],37],[[107,37],[[6,[[24,[[33,[38]]]],10]]]],[[77,37],[[6,[[24,[[33,[38]]]],10]]]],[[53,108,[110,[109]],[110,[111]]],[[24,[54]]]],[[70,[31,[[31,[27]]]],[24,[[2,[64,66]]]],8],[[6,[73,22]]]],[[70,[31,[[31,[27]]]],[24,[[2,[64,66]]]],8],[[6,[73,22]]]],[[53,39],[[24,[54]]]],[[53,39],[[24,[54]]]],[53,39],[[107,39,[40,[27]],39],[[6,[[40,[27]],10]]]],[[77,39,[40,[27]],39],[[6,[[40,[27]],10]]]],[[64,42,42,38,[24,[[40,[27]]]],8],[[6,[[24,[[31,[27]]]],15]]]],[[64,42,82,[24,[[40,[27]]]],8],[[6,[[24,[[31,[27]]]],15]]]],[[38,42],66],[[37,-1],2,112],[[38,8],[[6,[[31,[27]],15]]]],[[64,38,82,8],[[6,[[31,[27]],15]]]],[53,[[6,[[31,[27]],15]]]],[54,[[6,[[40,[27]],15]]]],[[54,-1],2,112],[38,37],[64,37],[53,37],[54,39],[38,37],[64,37],[[53,60],60],[64,[[6,[2,15]]]],[53,[[6,[2,15]]]],[38,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,[[40,[27]]]],[64,[[6,[[48,[25,79]],15]]]],[53,113],[53,113],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[38,[[24,[59]]]],[[38,8],[[6,[79,15]]]],[64,[[6,[79,15]]]],[54,66],[37,66],[[64,64,8],[[6,[66,15]]]],[70,66],[54,66],[54,111],[[],43],[8,43],[37,61],0,0,0,[[39,114,8],[[6,[[31,[[2,[54,[31,[27]]]]]],15]]]],[[39,8],[[6,[54,15]]]],[[-1,-2,8,107],[[6,[[2,[[24,[38]],115]],17]]],116,116],[[-2,-4,8,107],[[6,[[2,[[24,[64]],115]],17]]],[],[[116,[-1]]],[],[[116,[-3]]]],[[-1,-2,8,107],[[6,[[2,[[24,[53]],115]],17]]],116,116],[[-2,-4,8,107],[[6,[[2,[[24,[53]],115]],17]]],[],[[116,[-1]]],[],[[116,[-3]]]],[[-1,-2,8,107],[[6,[[2,[[24,[53]],115]],17]]],116,116],[38,[[24,[117]]]],[38,[[24,[117]]]],[67,42],[[[28,[27]]],[[24,[67]]]],[[26,[28,[27]]],38],[[26,[28,[27]]],64],[[26,[28,[27]]],53],[67,[[24,[[31,[27]]]]]],[[38,26],[[31,[27]]]],[[64,26],[[31,[27]]]],[[53,26],[[31,[27]]]],[[],77],[[-1,42],[[6,[67,11]]],[[116,[[33,[38]]]]]],[[[40,[27]]],37],[[41,37,42],[[6,[67,11]]]],[70,67],[[37,[48,[39,54]],8],[[6,[53,15]]]],0,0,0,[38,37],[64,37],[64,37],[[37,37],[[24,[71]]]],[[54,54],[[24,[71]]]],[[37,-1,8],[[6,[2,83]]],84],[[53,-1,8],[[6,[2,83]]],84],[[54,-1,8],[[6,[2,83]]],84],[[-1,8],[[6,[53,62]]],63],[[-1,8],[[6,[54,62]]],63],[[-1,8],[[6,[53,62]]],76],[[-1,8],[[6,[54,62]]],76],[64,[[48,[25,79]]]],[64,[[48,[25,79]]]],[64,[[48,[25,79]]]],0,[53,[[48,[39,54]]]],[53,[[48,[39,54]]]],[53,[[48,[39,54]]]],[[64,118,41,80,37,54,-1,[24,[119]]],[[89,[[88,[87]]]]],120],[[64,118,41,80,37,54,[33,[38]],-1],[[89,[[88,[87]]]]],120],[54,108],[[38,41,54,-1,[24,[119]]],[[89,[[88,[87]]]]],120],[[64,41,80,[40,[27]],54,-1,[24,[119]]],[[89,[[88,[87]]]]],120],[[53,41,121,122,-1],[[89,[[88,[87]]]]],120],[[38,41,54,-1],[[89,[[88,[87]]]]],120],[[64,41,80,[40,[27]],54,[33,[38]],-1],[[89,[[88,[87]]]]],120],[[53,41,121,122,-1],[[89,[[88,[87]]]]],120],[[46,66],[[6,[-1,11]]],[123,30]],[[-1,66],[[6,[-2,11]]],[],[]],[[[68,[-1]],66],[[6,[124,11]]],[[116,[125]],69,21,92]],[[[68,[[24,[126]]]],66],[[6,[127,11]]]],[[[68,[[2,[37,60]]]],66],[[6,[128,11]]]],[[[68,[126]],66],[[6,[127,11]]]],[[70,66],[[6,[67,11]]]],[[37,66],[[6,[129,11]]]],[[37,66],[[6,[130,11]]]],[[37,66],[[6,[131,11]]]],[[37,66],[[6,[132,11]]]],[[37,66],[[6,[133,11]]]],[[37,66],[[6,[134,11]]]],0,[[[31,[27]],66],135],[[77,[24,[45]]],2],[[],37],[[39,[24,[60]],8],54],[[39,[24,[60]],8],[[6,[[2,[54,[31,[27]]]],15]]]],[[39,114,[24,[[2,[39,[31,[66]]]]]],8],[[6,[[2,[54,[31,[27]]]],15]]]],[[39,114,[24,[[2,[39,[31,[66]]]]]],8],[[6,[54,15]]]],[[39,39,[24,[60]],8],[[31,[54]]]],[[39,39,114,8],[[6,[[31,[[2,[54,[31,[27]]]]]],15]]]],[[39,114,8],[[6,[[31,[54]],15]]]],[[39,[24,[60]],8],[[6,[[2,[54,[31,[27]]]],15]]]],[[39,114,8],[[6,[[2,[54,[31,[27]]]],15]]]],[[39,[24,[60]],8],[[6,[[2,[54,[31,[27]]]],15]]]],[[39,114,8],[[6,[[2,[54,[31,[27]]]],15]]]],[[39,[24,[60]],8],[[6,[[2,[54,[31,[27]]]],15]]]],[[39,114,8],[[6,[[2,[54,[31,[27]]]],15]]]],[[43,39,[24,[60]],8],[[6,[[31,[53]],15]]]],[[43,39,114,8],[[6,[[2,[[31,[53]],-1]],15]]],[136,[86,[[2,[54,[31,[27]]]]]],[137,[[2,[54,[31,[27]]]]]]]],[[43,39,114,8],[[6,[[31,[53]],15]]]],[[39,[24,[60]],8],[[6,[53,15]]]],[[39,114,8],[[6,[[2,[53,-1]],15]]],[136,[56,[],[[55,[[2,[54,[31,[27]]]]]]]],[137,[[2,[54,[31,[27]]]]]]]],[[39,114,8],[[6,[53,15]]]],[[39,[24,[60]],8],54],[[39,114,108,109,111,[24,[74]],8],[[6,[[2,[54,[31,[27]]]],15]]]],[[39,114,[24,[[2,[39,[31,[66]]]]]],8],[[6,[54,15]]]],[[39,39,[24,[60]],8],[[31,[54]]]],[[39,114,8],[[31,[54]]]],[[39,114,8],[[6,[[31,[54]],15]]]],[114,37],[54,66],[[53,60],60],[54,2],[67,42],[64,[[24,[60]]]],[53,60],[38,[[40,[[28,[27]]]]]],[38,[[24,[[48,[25,79]]]]]],[54,109],[[67,-1],6,138],[[37,-1],6,138],[[38,-1],6,138],[[64,82,8],[[6,[[31,[27]],15]]]],[[64,-1],6,138],[[53,-1],6,138],[[54,-1],6,138],[[64,82,8],[[6,[[31,[27]],15]]]],[53,[[6,[[31,[27]]]]]],[54,[[6,[[31,[27]]]]]],[[38,8],[[6,[[31,[27]],15]]]],[[64,82,43],[[6,[[31,[27]],15]]]],[53,[[6,[[31,[27]]]]]],[54,[[6,[[31,[27]]]]]],[[38,8],[[6,[[31,[27]],15]]]],[[53,60],2],[[38,72],2],[[64,[24,[60]]],2],[[64,[24,[60]]],2],[[64,[24,[39]]],2],[[54,75],2],[[54,60],2],[[38,42,79,66,[31,[139]],8],[[6,[2,15]]]],[[38,[48,[25,79]],[24,[[48,[25,79]]]],66,[31,[139]],8],[[6,[2,15]]]],[[38,37],2],[[64,37],2],[[53,37],2],[[54,39],2],[[54,111],2],[[38,[24,[117]]],2],[[38,37],2],[[64,37],2],[[64,[48,[25,79]]],2],[[53,[48,[39,54]]],2],[[54,108],2],[[54,66],2],[[64,[24,[60]]],2],[[53,60],2],[[38,[24,[[48,[25,79]]]],66,[31,[139]],8],[[6,[2,15]]]],[[54,109],2],[[64,[24,[60]]],2],[[64,[24,[60]]],2],[[64,[24,[39]]],2],[[64,[24,[60]]],2],[[64,[24,[60]]],2],[[64,[24,[39]]],2],[[38,39],2],0,0,[[70,[40,[27]]],[[2,[[31,[[31,[27]]]],[31,[27]]]]]],0,[37,[[40,[27]]]],[64,[[6,[[31,[27]],15]]]],[64,[[6,[140,15]]]],[[38,8],[[6,[105,15]]]],[37,[[31,[105]]]],[64,[[6,[[48,[25,79]],15]]]],[64,[[6,[79,15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,25,[]],[[37,106],25],[-1,25,[]],[[37,[24,[42]]],25],[[38,8],[[6,[105,15]]]],[[38,8],[[6,[79,15]]]],[37,[[31,[27]]]],[[53,41,121,122,[24,[141]]],[[89,[[88,[87]]]]]],[[64,37,41,80,54,-1,[24,[119]]],[[89,[[88,[87]]]]],120],[[64,37,41,80,54,[33,[38]],-1],[[89,[[88,[87]]]]],120],[64,[[24,[60]]]],[64,[[24,[60]]]],[64,[[24,[39]]]],0,[-1,[[6,[[57,[-2,-3]],[142,[-2]]]]],[],[],58],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[67,[[6,[70,-1]]],[]],[-1,[[6,[-2]]],[],[]],[79,[[6,[37]]]],[25,[[6,[37]]]],[[[28,[27]]],[[6,[37]]]],[[[31,[27]]],[[6,[37]]]],[79,[[6,[37]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[143,37,144,82,8],[[6,[64,15]]]],[[145,37,144,82,8],[[6,[64,15]]]],[[143,37,144,82,8],[[6,[64,15]]]],[[145,37,144,82,8],[[6,[64,15]]]],[[146,37,[24,[60]],[24,[60]],[24,[39]],[24,[60]],[24,[60]],[24,[39]],144,82,8],[[6,[64,15]]]],[[147,37,[24,[60]],[24,[60]],[24,[39]],[24,[60]],[24,[60]],[24,[39]],144,82,8],[[6,[64,15]]]],[[148,66,[31,[139]],8],[[6,[38,15]]]],[[79,8],[[6,[53]]]],[[79,8],[[6,[53]]]],[[146,37,[24,[60]],[24,[60]],[24,[39]],[24,[60]],[24,[60]],[24,[39]],144,82,8],[[6,[64,15]]]],[[147,37,[24,[60]],[24,[60]],[24,[39]],[24,[60]],[24,[60]],[24,[39]],144,82,8],[[6,[64,15]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,[[64,118,41,80,54,-1,[24,[119]]],[[89,[[88,[87]]]]],120],[[64,118,41,80,54,[33,[38]],-1],[[89,[[88,[87]]]]],120],[64,[[24,[60]]]],[64,[[24,[60]]]],[64,[[24,[39]]]],[[38,42,64,8],[[6,[[104,[2,103]],15]]]],[[38,42,79,8],[[6,[[104,[2,103]],15]]]],[[38,38,8],[[6,[[104,[2,103]],15]]]],[[70,[28,[27]],8],[[6,[[2,[[40,[27]],[31,[64]]]],22]]]],[[70,[28,[27]],8],[[6,[[2,[[40,[27]],[31,[[31,[27]]]]]],22]]]],[[70,[28,[27]],66,[40,[27]],8],[[6,[[2,[[40,[27]],[24,[64]]]],22]]]],[38,39],[[[28,[27]],66,8],[[6,[38,15]]]],[[[28,[27]],66,8],[[6,[[2,[38,61]],15]]]],[[[28,[27]],8],[[6,[38,15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[38,41,149],[[89,[[88,[87]]]]]],[[64,41,149,[33,[38]]],[[89,[[88,[87]]]]]],[[64,41,149,[33,[38]]],[[89,[[88,[87]]]]]],[[64,41,149,[33,[38]]],[[89,[[88,[87]]]]]],[[64,41,149,[33,[38]]],[[89,[[88,[87]]]]]],0,[[67,37],67],[[67,150],67],[[67,151],67],[[53,41,152,60,[24,[39]],[24,[141]],-1,[24,[119]]],[[89,[[88,[87]]]]],[120,92]],[[-1,-2],[[6,[2]]],[],153],[115,[[6,[144,11]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[154,42],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[155,2],[115,2],[156,2],[157,2],[158,2],[159,2],[132,2],[160,2],[133,2],[129,2],[161,2],[162,2],[163,2],[164,2],[165,2],[166,2],[167,2],[168,2],[169,2],[170,2],[130,2],[171,2],[172,2],[173,2],[174,2],[175,2],[131,2],[176,2],[177,2],[178,2],[128,2],[179,2],[180,2],[181,2],[182,2],[183,2],[184,2],[185,2],[186,2],[187,2],[188,2],[189,2],[127,2],[190,2],[124,2],[191,2],[192,2],[193,2],[155,155],[115,115],[156,156],[157,157],[158,158],[159,159],[132,132],[160,160],[133,133],[129,129],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[130,130],[171,171],[172,172],[173,173],[174,174],[175,175],[131,131],[176,176],[177,177],[178,178],[128,128],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[127,127],[190,190],[124,124],[191,191],[192,192],[193,193],[154,154],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[154,154],71],0,[[-1,-2],71,[],[]],0,0,[[],155],[[],115],[[],156],[[],157],[[],158],[[],159],[[],132],[[],160],[[],133],[[],129],[[],161],[[],162],[[],163],[[],164],[[],165],[[],166],[[],167],[[],168],[[],169],[[],170],[[],130],[[],171],[[],172],[[],173],[[],174],[[],175],[[],131],[[],176],[[],177],[[],178],[[],128],[[],179],[[],180],[[],181],[[],182],[[],183],[[],184],[[],185],[[],186],[[],187],[[],188],[[],189],[[],127],[[],190],[[],124],[[],191],[[],192],[[],193],[[],154],[-1,[[6,[155]]],78],[-1,[[6,[115]]],78],[-1,[[6,[156]]],78],[-1,[[6,[157]]],78],[-1,[[6,[158]]],78],[-1,[[6,[159]]],78],[-1,[[6,[132]]],78],[-1,[[6,[160]]],78],[-1,[[6,[133]]],78],[-1,[[6,[129]]],78],[-1,[[6,[161]]],78],[-1,[[6,[162]]],78],[-1,[[6,[163]]],78],[-1,[[6,[164]]],78],[-1,[[6,[165]]],78],[-1,[[6,[166]]],78],[-1,[[6,[167]]],78],[-1,[[6,[168]]],78],[-1,[[6,[169]]],78],[-1,[[6,[170]]],78],[-1,[[6,[130]]],78],[-1,[[6,[171]]],78],[-1,[[6,[172]]],78],[-1,[[6,[173]]],78],[-1,[[6,[174]]],78],[-1,[[6,[175]]],78],[-1,[[6,[131]]],78],[-1,[[6,[176]]],78],[-1,[[6,[177]]],78],[-1,[[6,[178]]],78],[-1,[[6,[128]]],78],[-1,[[6,[179]]],78],[-1,[[6,[180]]],78],[-1,[[6,[181]]],78],[-1,[[6,[182]]],78],[-1,[[6,[183]]],78],[-1,[[6,[184]]],78],[-1,[[6,[185]]],78],[-1,[[6,[186]]],78],[-1,[[6,[187]]],78],[-1,[[6,[188]]],78],[-1,[[6,[189]]],78],[-1,[[6,[127]]],78],[-1,[[6,[190]]],78],[-1,[[6,[124]]],78],[-1,[[6,[191]]],78],[-1,[[6,[192]]],78],[-1,[[6,[193]]],78],[-1,[[6,[154]]],78],[155,61],[115,61],[156,61],[157,61],[158,61],[159,61],[132,61],[160,61],[133,61],[129,61],[161,61],[162,61],[163,61],[164,61],[165,61],[166,61],[167,61],[168,61],[169,61],[170,61],[130,61],[171,61],[172,61],[173,61],[174,61],[175,61],[131,61],[176,61],[177,61],[178,61],[128,61],[179,61],[180,61],[181,61],[182,61],[183,61],[184,61],[185,61],[186,61],[187,61],[188,61],[189,61],[127,61],[190,61],[124,61],[191,61],[192,61],[193,61],0,[[155,155],66],[[115,115],66],[[156,156],66],[[157,157],66],[[158,158],66],[[159,159],66],[[132,132],66],[[160,160],66],[[133,133],66],[[129,129],66],[[161,161],66],[[162,162],66],[[163,163],66],[[164,164],66],[[165,165],66],[[166,166],66],[[167,167],66],[[168,168],66],[[169,169],66],[[170,170],66],[[130,130],66],[[171,171],66],[[172,172],66],[[173,173],66],[[174,174],66],[[175,175],66],[[131,131],66],[[176,176],66],[[177,177],66],[[178,178],66],[[128,128],66],[[179,179],66],[[180,180],66],[[181,181],66],[[182,182],66],[[183,183],66],[[184,184],66],[[185,185],66],[[186,186],66],[[187,187],66],[[188,188],66],[[189,189],66],[[127,127],66],[[190,190],66],[[124,124],66],[[191,191],66],[[192,192],66],[[193,193],66],[[154,154],66],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[157,3],[[89,[[88,[87]]]]]],[[159,3],[[89,[[88,[87]]]]]],[[132,3],[[89,[[88,[87]]]]]],[[160,3],[[89,[[88,[87]]]]]],[[133,3],[[89,[[88,[87]]]]]],[[129,3],[[89,[[88,[87]]]]]],[[130,3],[[89,[[88,[87]]]]]],[[172,3],[[89,[[88,[87]]]]]],[[131,3],[[89,[[88,[87]]]]]],[[177,3],[[89,[[88,[87]]]]]],[[128,3],[[89,[[88,[87]]]]]],[[180,3],[[89,[[88,[87]]]]]],[[182,3],[[89,[[88,[87]]]]]],[[184,3],[[89,[[88,[87]]]]]],[[186,3],[[89,[[88,[87]]]]]],[[188,3],[[89,[[88,[87]]]]]],[[127,3],[[89,[[88,[87]]]]]],[[124,3],[[89,[[88,[87]]]]]],[[155,4],[[6,[2,5]]]],[[115,4],[[6,[2,5]]]],[[156,4],[[6,[2,5]]]],[[157,4],[[6,[2,5]]]],[[158,4],[[6,[2,5]]]],[[159,4],[[6,[2,5]]]],[[132,4],[[6,[2,5]]]],[[160,4],[[6,[2,5]]]],[[133,4],[[6,[2,5]]]],[[129,4],[[6,[2,5]]]],[[161,4],[[6,[2,5]]]],[[162,4],[[6,[2,5]]]],[[163,4],[[6,[2,5]]]],[[164,4],[[6,[2,5]]]],[[165,4],[[6,[2,5]]]],[[166,4],[[6,[2,5]]]],[[167,4],[[6,[2,5]]]],[[168,4],[[6,[2,5]]]],[[169,4],[[6,[2,5]]]],[[170,4],[[6,[2,5]]]],[[130,4],[[6,[2,5]]]],[[171,4],[[6,[2,5]]]],[[172,4],[[6,[2,5]]]],[[173,4],[[6,[2,5]]]],[[174,4],[[6,[2,5]]]],[[175,4],[[6,[2,5]]]],[[131,4],[[6,[2,5]]]],[[176,4],[[6,[2,5]]]],[[177,4],[[6,[2,5]]]],[[178,4],[[6,[2,5]]]],[[128,4],[[6,[2,5]]]],[[179,4],[[6,[2,5]]]],[[180,4],[[6,[2,5]]]],[[181,4],[[6,[2,5]]]],[[182,4],[[6,[2,5]]]],[[183,4],[[6,[2,5]]]],[[184,4],[[6,[2,5]]]],[[185,4],[[6,[2,5]]]],[[186,4],[[6,[2,5]]]],[[187,4],[[6,[2,5]]]],[[188,4],[[6,[2,5]]]],[[189,4],[[6,[2,5]]]],[[127,4],[[6,[2,5]]]],[[190,4],[[6,[2,5]]]],[[124,4],[[6,[2,5]]]],[[191,4],[[6,[2,5]]]],[[192,4],[[6,[2,5]]]],[[193,4],[[6,[2,5]]]],[[154,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[194,159],[-1,-1,[]],[195,132],[-1,-1,[]],[196,160],[-1,-1,[]],[197,133],[-1,-1,[]],[-1,-1,[]],[198,129],[199,161],[-1,-1,[]],[-1,-1,[]],[200,162],[201,163],[-1,-1,[]],[-1,-1,[]],[202,164],[203,165],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[204,130],[-1,-1,[]],[205,171],[-1,-1,[]],[206,172],[-1,-1,[]],[207,173],[-1,-1,[]],[208,174],[209,175],[-1,-1,[]],[-1,-1,[]],[210,131],[-1,-1,[]],[211,176],[-1,-1,[]],[212,177],[213,178],[-1,-1,[]],[-1,-1,[]],[214,128],[-1,-1,[]],[215,179],[-1,-1,[]],[216,180],[-1,-1,[]],[217,181],[218,182],[-1,-1,[]],[219,183],[-1,-1,[]],[220,184],[-1,-1,[]],[221,185],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[222,188],[-1,-1,[]],[223,189],[224,127],[-1,-1,[]],[-1,-1,[]],[225,190],[-1,-1,[]],[226,191],[-1,-1,[]],[227,192],[-1,-1,[]],[228,193],[-1,-1,[]],[-1,-1,[]],[229,[[24,[154]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[42,[[24,[154]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[170,39],[[24,[230]]]],0,[[154,-1],2,112],0,[[170,39,230],[[24,[230]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[229,66],0,0,0,[161,[[6,[115]]]],[162,[[6,[115]]]],[163,[[6,[115]]]],[164,[[6,[115]]]],[165,[[6,[115]]]],[171,[[6,[115]]]],[173,[[6,[115]]]],[175,[[6,[115]]]],[176,[[6,[115]]]],[178,[[6,[115]]]],[179,[[6,[115]]]],[181,[[6,[115]]]],[183,[[6,[115]]]],[185,[[6,[115]]]],[189,[[6,[115]]]],[190,[[6,[115]]]],[191,[[6,[115]]]],[193,[[6,[115]]]],[157,42],[159,42],[132,42],[160,42],[133,42],[129,42],[130,42],[172,42],[131,42],[177,42],[128,42],[180,42],[182,42],[184,42],[186,42],[188,42],[127,42],[124,42],[[[28,[27]]],[[24,[155]]]],[[[28,[27]]],[[24,[115]]]],[[[28,[27]]],[[24,[156]]]],[[[28,[27]]],[[24,[157]]]],[[[28,[27]]],[[24,[158]]]],[[[28,[27]]],[[24,[159]]]],[[[28,[27]]],[[24,[132]]]],[[[28,[27]]],[[24,[160]]]],[[[28,[27]]],[[24,[133]]]],[[[28,[27]]],[[24,[129]]]],[[[28,[27]]],[[24,[161]]]],[[[28,[27]]],[[24,[162]]]],[[[28,[27]]],[[24,[163]]]],[[[28,[27]]],[[24,[164]]]],[[[28,[27]]],[[24,[165]]]],[[[28,[27]]],[[24,[166]]]],[[[28,[27]]],[[24,[167]]]],[[[28,[27]]],[[24,[168]]]],[[[28,[27]]],[[24,[169]]]],[[[28,[27]]],[[24,[170]]]],[[[28,[27]]],[[24,[130]]]],[[[28,[27]]],[[24,[171]]]],[[[28,[27]]],[[24,[172]]]],[[[28,[27]]],[[24,[173]]]],[[[28,[27]]],[[24,[174]]]],[[[28,[27]]],[[24,[175]]]],[[[28,[27]]],[[24,[131]]]],[[[28,[27]]],[[24,[176]]]],[[[28,[27]]],[[24,[177]]]],[[[28,[27]]],[[24,[178]]]],[[[28,[27]]],[[24,[128]]]],[[[28,[27]]],[[24,[179]]]],[[[28,[27]]],[[24,[180]]]],[[[28,[27]]],[[24,[181]]]],[[[28,[27]]],[[24,[182]]]],[[[28,[27]]],[[24,[183]]]],[[[28,[27]]],[[24,[184]]]],[[[28,[27]]],[[24,[185]]]],[[[28,[27]]],[[24,[186]]]],[[[28,[27]]],[[24,[187]]]],[[[28,[27]]],[[24,[188]]]],[[[28,[27]]],[[24,[189]]]],[[[28,[27]]],[[24,[127]]]],[[[28,[27]]],[[24,[190]]]],[[[28,[27]]],[[24,[124]]]],[[[28,[27]]],[[24,[191]]]],[[[28,[27]]],[[24,[192]]]],[[[28,[27]]],[[24,[193]]]],[155,[[24,[[31,[27]]]]]],[115,[[24,[[31,[27]]]]]],[156,[[24,[[31,[27]]]]]],[157,[[24,[[31,[27]]]]]],[158,[[24,[[31,[27]]]]]],[159,[[24,[[31,[27]]]]]],[132,[[24,[[31,[27]]]]]],[160,[[24,[[31,[27]]]]]],[133,[[24,[[31,[27]]]]]],[129,[[24,[[31,[27]]]]]],[161,[[24,[[31,[27]]]]]],[162,[[24,[[31,[27]]]]]],[163,[[24,[[31,[27]]]]]],[164,[[24,[[31,[27]]]]]],[165,[[24,[[31,[27]]]]]],[166,[[24,[[31,[27]]]]]],[167,[[24,[[31,[27]]]]]],[168,[[24,[[31,[27]]]]]],[169,[[24,[[31,[27]]]]]],[170,[[24,[[31,[27]]]]]],[130,[[24,[[31,[27]]]]]],[171,[[24,[[31,[27]]]]]],[172,[[24,[[31,[27]]]]]],[173,[[24,[[31,[27]]]]]],[174,[[24,[[31,[27]]]]]],[175,[[24,[[31,[27]]]]]],[131,[[24,[[31,[27]]]]]],[176,[[24,[[31,[27]]]]]],[177,[[24,[[31,[27]]]]]],[178,[[24,[[31,[27]]]]]],[128,[[24,[[31,[27]]]]]],[179,[[24,[[31,[27]]]]]],[180,[[24,[[31,[27]]]]]],[181,[[24,[[31,[27]]]]]],[182,[[24,[[31,[27]]]]]],[183,[[24,[[31,[27]]]]]],[184,[[24,[[31,[27]]]]]],[185,[[24,[[31,[27]]]]]],[186,[[24,[[31,[27]]]]]],[187,[[24,[[31,[27]]]]]],[188,[[24,[[31,[27]]]]]],[189,[[24,[[31,[27]]]]]],[127,[[24,[[31,[27]]]]]],[190,[[24,[[31,[27]]]]]],[124,[[24,[[31,[27]]]]]],[191,[[24,[[31,[27]]]]]],[192,[[24,[[31,[27]]]]]],[193,[[24,[[31,[27]]]]]],[[154,154],[[24,[71]]]],0,[161,[[6,[155]]]],[162,[[6,[155]]]],[163,[[6,[155]]]],[164,[[6,[155]]]],[165,[[6,[155]]]],[171,[[6,[155]]]],[173,[[6,[155]]]],[175,[[6,[155]]]],[176,[[6,[155]]]],[178,[[6,[155]]]],[179,[[6,[155]]]],[181,[[6,[155]]]],[183,[[6,[155]]]],[185,[[6,[155]]]],[189,[[6,[155]]]],[190,[[6,[155]]]],[191,[[6,[155]]]],[193,[[6,[155]]]],[161,[[6,[155]]]],[162,[[6,[155]]]],[163,[[6,[155]]]],[164,[[6,[155]]]],[165,[[6,[155]]]],[171,[[6,[155]]]],[173,[[6,[155]]]],[175,[[6,[155]]]],[176,[[6,[155]]]],[178,[[6,[155]]]],[179,[[6,[155]]]],[181,[[6,[155]]]],[183,[[6,[155]]]],[185,[[6,[155]]]],[189,[[6,[155]]]],[190,[[6,[155]]]],[191,[[6,[155]]]],[193,[[6,[155]]]],0,0,[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],[[-1,66],[[6,[-2,11]]],[],[]],0,0,0,0,0,0,[[155,-1],6,138],[[115,-1],6,138],[[156,-1],6,138],[[157,-1],6,138],[[158,-1],6,138],[[159,-1],6,138],[[132,-1],6,138],[[160,-1],6,138],[[133,-1],6,138],[[129,-1],6,138],[[161,-1],6,138],[[162,-1],6,138],[[163,-1],6,138],[[164,-1],6,138],[[165,-1],6,138],[[166,-1],6,138],[[167,-1],6,138],[[168,-1],6,138],[[169,-1],6,138],[[170,-1],6,138],[[130,-1],6,138],[[171,-1],6,138],[[172,-1],6,138],[[173,-1],6,138],[[174,-1],6,138],[[175,-1],6,138],[[131,-1],6,138],[[176,-1],6,138],[[177,-1],6,138],[[178,-1],6,138],[[128,-1],6,138],[[179,-1],6,138],[[180,-1],6,138],[[181,-1],6,138],[[182,-1],6,138],[[183,-1],6,138],[[184,-1],6,138],[[185,-1],6,138],[[186,-1],6,138],[[187,-1],6,138],[[188,-1],6,138],[[189,-1],6,138],[[127,-1],6,138],[[190,-1],6,138],[[124,-1],6,138],[[191,-1],6,138],[[192,-1],6,138],[[193,-1],6,138],[[154,-1],6,138],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[67,[[6,[180,-1]]],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[229,[[6,[154,231]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[232,2],[232,232],[233,233],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],232],[-1,[[6,[232]]],78],[-1,[[6,[233]]],78],[[233,-1],2,234],[232,61],[233,61],[[232,232],66],[[233,233],66],[[232,4],[[6,[2,5]]]],[[233,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[233]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[232]]]],[232,[[24,[[31,[27]]]]]],0,[[232,-1],6,138],[[233,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[238,2],[239,2],[240,2],[238,238],[239,239],[240,240],[241,241],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],238],[[],239],[[],240],[-1,[[6,[238]]],78],[-1,[[6,[239]]],78],[-1,[[6,[240]]],78],[-1,[[6,[241]]],78],[[241,-1],2,234],[238,61],[239,61],[240,61],[241,61],[[238,238],66],[[239,239],66],[[240,240],66],[[241,241],66],0,[[238,4],[[6,[2,5]]]],[[239,4],[[6,[2,5]]]],[[240,4],[[6,[2,5]]]],[[241,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,0,0,0,[[[24,[241]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[238]]]],[[[28,[27]]],[[24,[239]]]],[[[28,[27]]],[[24,[240]]]],[238,[[24,[[31,[27]]]]]],[239,[[24,[[31,[27]]]]]],[240,[[24,[[31,[27]]]]]],[[238,-1],6,138],[[239,-1],6,138],[[240,-1],6,138],[[241,-1],6,138],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[214,2],[214,214],[242,242],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],214],[-1,[[6,[214]]],78],[-1,[[6,[242]]],78],[[242,-1],2,234],[214,61],[242,61],[[214,214],66],[[242,242],66],[[214,4],[[6,[2,5]]]],[[242,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[[24,[242]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[214]]]],[214,[[24,[[31,[27]]]]]],0,0,[[214,-1],6,138],[[242,-1],6,138],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[215,2],[215,215],[243,243],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],215],[-1,[[6,[215]]],78],[-1,[[6,[243]]],78],[[243,-1],2,234],[215,61],[243,61],[[215,215],66],[[243,243],66],[[215,4],[[6,[2,5]]]],[[243,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[243]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[215]]]],[215,[[24,[[31,[27]]]]]],0,[[215,-1],6,138],[[243,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[244,2],[245,2],[244,244],[245,245],[246,246],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[[],244],[[],245],[-1,[[6,[244]]],78],[-1,[[6,[245]]],78],[-1,[[6,[246]]],78],[[246,-1],2,234],[244,61],[245,61],[246,61],[[244,244],66],[[245,245],66],[[246,246],66],[[244,4],[[6,[2,5]]]],[[245,4],[[6,[2,5]]]],[[246,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[246]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[244]]]],[[[28,[27]]],[[24,[245]]]],[244,[[24,[[31,[27]]]]]],[245,[[24,[[31,[27]]]]]],[[244,-1],6,138],[[245,-1],6,138],[[246,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[210,2],[210,210],[247,247],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],210],[-1,[[6,[210]]],78],[-1,[[6,[247]]],78],[[247,-1],2,234],[210,61],[247,61],[[210,210],66],[[247,247],66],[[210,4],[[6,[2,5]]]],[[247,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[247]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[210]]]],[210,[[24,[[31,[27]]]]]],0,[[210,-1],6,138],[[247,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[211,2],[211,211],[248,248],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],211],[-1,[[6,[211]]],78],[-1,[[6,[248]]],78],[[248,-1],2,234],[211,61],[248,61],[[211,211],66],[[248,248],66],[[211,4],[[6,[2,5]]]],[[248,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[248]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[211]]]],[211,[[24,[[31,[27]]]]]],0,[[211,-1],6,138],[[248,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[249,249],[[-1,-2],2,[],[]],[-1,[[6,[249]]],78],[[249,-1],2,234],[249,61],[[249,249],66],[[249,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[249]],39,235,-1,236],[[6,[2,231]]],237],[[249,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[212,2],[212,212],[250,250],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],212],[-1,[[6,[212]]],78],[-1,[[6,[250]]],78],[[250,-1],2,234],[212,61],[250,61],[[212,212],66],[[250,250],66],[[212,4],[[6,[2,5]]]],[[250,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[250]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[212]]]],[212,[[24,[[31,[27]]]]]],0,[[212,-1],6,138],[[250,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[251,2],[252,2],[213,2],[251,251],[252,252],[213,213],[253,253],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[[],251],[[],252],[[],213],[-1,[[6,[251]]],78],[-1,[[6,[252]]],78],[-1,[[6,[213]]],78],[-1,[[6,[253]]],78],[[253,-1],2,234],[251,61],[252,61],[213,61],[253,61],[[251,251],66],[[252,252],66],[[213,213],66],[[253,253],66],[[251,4],[[6,[2,5]]]],[[252,4],[[6,[2,5]]]],[[213,4],[[6,[2,5]]]],[[253,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[253]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[251]]]],[[[28,[27]]],[[24,[252]]]],[[[28,[27]]],[[24,[213]]]],[251,[[24,[[31,[27]]]]]],[252,[[24,[[31,[27]]]]]],[213,[[24,[[31,[27]]]]]],0,[[251,-1],6,138],[[252,-1],6,138],[[213,-1],6,138],[[253,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[254,254],[[-1,-2],2,[],[]],[-1,[[6,[254]]],78],[[254,-1],2,234],[254,61],[[254,254],66],[[254,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[254]],39,235,-1,236],[[6,[2,231]]],237],[[254,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[216,2],[216,216],[255,255],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],216],[-1,[[6,[216]]],78],[-1,[[6,[255]]],78],0,[[255,-1],2,234],[216,61],[255,61],[[216,216],66],[[255,255],66],[[216,4],[[6,[2,5]]]],[[255,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[[24,[255]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[216]]]],[216,[[24,[[31,[27]]]]]],0,0,[[216,-1],6,138],[[255,-1],6,138],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[256,256],[[-1,-2],2,[],[]],[-1,[[6,[256]]],78],[[256,-1],2,234],[256,61],[[256,256],66],[[256,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[256]],39,235,-1,236],[[6,[2,231]]],237],[[256,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[217,2],[217,217],[257,257],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],217],[-1,[[6,[217]]],78],[-1,[[6,[257]]],78],[[257,-1],2,234],[217,61],[257,61],[[217,217],66],[[257,257],66],[[217,4],[[6,[2,5]]]],[[257,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[257]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[217]]]],[217,[[24,[[31,[27]]]]]],0,[[217,-1],6,138],[[257,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[258,2],[258,258],[259,259],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],258],[-1,[[6,[258]]],78],[-1,[[6,[259]]],78],0,[[259,-1],2,234],[258,61],[259,61],[[258,258],66],[[259,259],66],[[258,4],[[6,[2,5]]]],[[259,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[259]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[258]]]],[258,[[24,[[31,[27]]]]]],[[258,-1],6,138],[[259,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[260,2],[260,260],[261,261],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],260],[-1,[[6,[260]]],78],[-1,[[6,[261]]],78],[[261,-1],2,234],[260,61],[261,61],[[260,260],66],[[261,261],66],[[260,4],[[6,[2,5]]]],[[261,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[261]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[260]]]],[260,[[24,[[31,[27]]]]]],0,[[260,-1],6,138],[[261,-1],6,138],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[226,2],[226,226],[262,262],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],226],[-1,[[6,[226]]],78],[-1,[[6,[262]]],78],[[262,-1],2,234],[226,61],[262,61],[[226,226],66],[[262,262],66],[[226,4],[[6,[2,5]]]],[[262,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[262]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[226]]]],[226,[[24,[[31,[27]]]]]],0,[[226,-1],6,138],[[262,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[263,2],[264,2],[263,263],[264,264],[265,265],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],263],[[],264],[-1,[[6,[263]]],78],[-1,[[6,[264]]],78],[-1,[[6,[265]]],78],[[265,-1],2,234],[263,61],[264,61],[265,61],0,[[263,263],66],[[264,264],66],[[265,265],66],0,0,0,[[263,4],[[6,[2,5]]]],[[264,4],[[6,[2,5]]]],[[265,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[265]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[263]]]],[[[28,[27]]],[[24,[264]]]],[263,[[24,[[31,[27]]]]]],[264,[[24,[[31,[27]]]]]],0,0,[[263,-1],6,138],[[264,-1],6,138],[[265,-1],6,138],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[206,2],[206,206],[266,266],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],206],[-1,[[6,[206]]],78],[-1,[[6,[266]]],78],[206,42],0,[[266,-1],2,234],[206,61],[266,61],[[206,206],66],[[266,266],66],[[206,4],[[6,[2,5]]]],[[266,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[266]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[206]]]],[206,[[24,[[31,[27]]]]]],0,[206,[[269,[[268,[[267,[229]]]]]]]],0,[[206,154],2],[[206,-1],6,138],[[266,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[207,2],[207,207],[270,270],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],207],[-1,[[6,[207]]],78],[-1,[[6,[270]]],78],[[270,-1],2,234],[207,61],[270,61],[[207,207],66],[[270,270],66],[[207,4],[[6,[2,5]]]],[[270,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[270]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[207]]]],[207,[[24,[[31,[27]]]]]],0,[[207,-1],6,138],[[270,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[271,2],[272,2],[273,2],[271,271],[272,272],[273,273],[274,274],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],271],[[],272],[[],273],[-1,[[6,[271]]],78],[-1,[[6,[272]]],78],[-1,[[6,[273]]],78],[-1,[[6,[274]]],78],[[274,-1],2,234],[271,61],[272,61],[273,61],[274,61],0,[[271,271],66],[[272,272],66],[[273,273],66],[[274,274],66],[[271,4],[[6,[2,5]]]],[[272,4],[[6,[2,5]]]],[[273,4],[[6,[2,5]]]],[[274,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,[[[24,[274]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[271]]]],[[[28,[27]]],[[24,[272]]]],[[[28,[27]]],[[24,[273]]]],[271,[[24,[[31,[27]]]]]],[272,[[24,[[31,[27]]]]]],[273,[[24,[[31,[27]]]]]],[271,154],0,[[271,-1],6,138],[[272,-1],6,138],[[273,-1],6,138],[[274,-1],6,138],[[271,154],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[198,2],[198,198],[275,275],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],198],[-1,[[6,[198]]],78],[-1,[[6,[275]]],78],[[275,-1],2,234],[198,61],[275,61],[[198,198],66],[[275,275],66],[[198,4],[[6,[2,5]]]],[[275,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[275]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[198]]]],[198,[[24,[[31,[27]]]]]],0,[[198,-1],6,138],[[275,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[203,2],[203,203],[276,276],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],203],[-1,[[6,[203]]],78],[-1,[[6,[276]]],78],[[276,-1],2,234],[203,61],[276,61],[[203,203],66],[[276,276],66],[[203,4],[[6,[2,5]]]],[[276,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[276]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[203]]]],[203,[[24,[[31,[27]]]]]],0,[[203,-1],6,138],[[276,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[277,2],[277,277],[278,278],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],277],[-1,[[6,[277]]],78],[-1,[[6,[278]]],78],[[278,-1],2,234],[277,61],[278,61],[[277,277],66],[[278,278],66],[[277,4],[[6,[2,5]]]],[[278,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[278]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[277]]]],[277,[[24,[[31,[27]]]]]],0,[[277,-1],6,138],[[278,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[197,2],[197,197],[279,279],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],197],[-1,[[6,[197]]],78],[-1,[[6,[279]]],78],[[279,-1],2,234],[197,61],[279,61],[[197,197],66],[[279,279],66],[[197,4],[[6,[2,5]]]],[[279,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[279]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[197]]]],[197,[[24,[[31,[27]]]]]],0,[[197,-1],6,138],[[279,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[202,2],[202,202],[280,280],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],202],[-1,[[6,[202]]],78],[-1,[[6,[280]]],78],[[280,-1],2,234],[202,61],[280,61],[[202,202],66],[[280,280],66],[[202,4],[[6,[2,5]]]],[[280,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[280]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[202]]]],[202,[[24,[[31,[27]]]]]],0,[[202,-1],6,138],[[280,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[281,281],[[-1,-2],2,[],[]],[-1,[[6,[281]]],78],[[281,-1],2,234],[281,61],[[281,281],66],[[281,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[281]],39,235,-1,236],[[6,[2,231]]],237],[[281,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[218,2],[218,218],[282,282],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],218],[-1,[[6,[218]]],78],[-1,[[6,[282]]],78],[[282,-1],2,234],[218,61],[282,61],[[218,218],66],[[282,282],66],[[218,4],[[6,[2,5]]]],[[282,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[282]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[218]]]],[218,[[24,[[31,[27]]]]]],0,0,[[218,-1],6,138],[[282,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[219,2],[219,219],[283,283],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],219],[-1,[[6,[219]]],78],[-1,[[6,[283]]],78],[[283,-1],2,234],[219,61],[283,61],[[219,219],66],[[283,283],66],[[219,4],[[6,[2,5]]]],[[283,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[283]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[219]]]],[219,[[24,[[31,[27]]]]]],0,[[219,-1],6,138],[[283,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[284,284],[[-1,-2],2,[],[]],[-1,[[6,[284]]],78],[[284,-1],2,234],[284,61],[[284,284],66],[[284,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[284]],39,235,-1,236],[[6,[2,231]]],237],[[284,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[196,2],[196,196],[285,285],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],196],[-1,[[6,[196]]],78],[-1,[[6,[285]]],78],[[285,-1],2,234],[196,61],[285,61],[[196,196],66],[[285,285],66],[[196,4],[[6,[2,5]]]],[[285,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[285]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[196]]]],[196,[[24,[[31,[27]]]]]],0,[[196,-1],6,138],[[285,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[201,2],[201,201],[286,286],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],201],[-1,[[6,[201]]],78],[-1,[[6,[286]]],78],[[286,-1],2,234],[201,61],[286,61],[[201,201],66],[[286,286],66],[[201,4],[[6,[2,5]]]],[[286,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[286]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[201]]]],[201,[[24,[[31,[27]]]]]],0,[[201,-1],6,138],[[286,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[287,287],[[-1,-2],2,[],[]],[-1,[[6,[287]]],78],[[287,-1],2,234],[287,61],[[287,287],66],[[287,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[287]],39,235,-1,236],[[6,[2,231]]],237],[[287,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[204,2],[204,204],[288,288],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],204],[-1,[[6,[204]]],78],[-1,[[6,[288]]],78],[[288,-1],2,234],[204,61],[288,61],[[204,204],66],[[288,288],66],[[204,4],[[6,[2,5]]]],[[288,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[[24,[288]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[204]]]],[204,[[24,[[31,[27]]]]]],0,0,0,[[204,-1],6,138],[[288,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[205,2],[205,205],[289,289],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],205],[-1,[[6,[205]]],78],[-1,[[6,[289]]],78],[[289,-1],2,234],[205,61],[289,61],[[205,205],66],[[289,289],66],[[205,4],[[6,[2,5]]]],[[289,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[289]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[205]]]],[205,[[24,[[31,[27]]]]]],0,[[205,-1],6,138],[[289,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[290,2],[290,290],[291,291],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],290],[-1,[[6,[290]]],78],[-1,[[6,[291]]],78],[[291,-1],2,234],[290,61],[291,61],[[290,290],66],[[291,291],66],[[290,4],[[6,[2,5]]]],[[291,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[[24,[291]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[290]]]],[290,[[24,[[31,[27]]]]]],[[290,-1],6,138],[[291,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[195,2],[195,195],[292,292],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],195],[-1,[[6,[195]]],78],[-1,[[6,[292]]],78],[[292,-1],2,234],[195,61],[292,61],[[195,195],66],[[292,292],66],[[195,4],[[6,[2,5]]]],[[292,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[292]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[195]]]],[195,[[24,[[31,[27]]]]]],0,[[195,-1],6,138],[[292,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[200,2],[200,200],[293,293],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],200],[-1,[[6,[200]]],78],[-1,[[6,[293]]],78],[[293,-1],2,234],[200,61],[293,61],[[200,200],66],[[293,293],66],[[200,4],[[6,[2,5]]]],[[293,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[293]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[200]]]],[200,[[24,[[31,[27]]]]]],0,[[200,-1],6,138],[[293,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[294,294],[[-1,-2],2,[],[]],[-1,[[6,[294]]],78],[[294,-1],2,234],[294,61],[[294,294],66],[[294,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[294]],39,235,-1,236],[[6,[2,231]]],237],[[294,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[194,2],[194,194],[295,295],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],194],[-1,[[6,[194]]],78],[-1,[[6,[295]]],78],[[295,-1],2,234],[194,61],[295,61],[[194,194],66],[[295,295],66],[[194,4],[[6,[2,5]]]],[[295,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[295]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[194]]]],[194,[[24,[[31,[27]]]]]],0,[[194,-1],6,138],[[295,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[199,2],[199,199],[296,296],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],199],[-1,[[6,[199]]],78],[-1,[[6,[296]]],78],[[296,-1],2,234],[199,61],[296,61],[[199,199],66],[[296,296],66],[[199,4],[[6,[2,5]]]],[[296,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[296]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[199]]]],[199,[[24,[[31,[27]]]]]],0,[[199,-1],6,138],[[296,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[297,297],[[-1,-2],2,[],[]],[-1,[[6,[297]]],78],[[297,-1],2,234],[297,61],[[297,297],66],[[297,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[297]],39,235,-1,236],[[6,[2,231]]],237],[[297,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[227,2],[227,227],[298,298],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],227],[-1,[[6,[227]]],78],[-1,[[6,[298]]],78],[[298,-1],2,234],[227,61],[298,61],[[227,227],66],[[298,298],66],[[227,4],[[6,[2,5]]]],[[298,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[[24,[298]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[227]]]],[227,[[24,[[31,[27]]]]]],0,0,[[227,-1],6,138],[[298,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[228,2],[228,228],[299,299],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],228],[-1,[[6,[228]]],78],[-1,[[6,[299]]],78],[[299,-1],2,234],[228,61],[299,61],[[228,228],66],[[299,299],66],[[228,4],[[6,[2,5]]]],[[299,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[299]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[228]]]],[228,[[24,[[31,[27]]]]]],0,[[228,-1],6,138],[[299,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[300,2],[300,300],[301,301],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],300],[-1,[[6,[300]]],78],[-1,[[6,[301]]],78],0,[[301,-1],2,234],[300,61],[301,61],[[300,300],66],[[301,301],66],[[300,4],[[6,[2,5]]]],[[301,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[301]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[300]]]],[300,[[24,[[31,[27]]]]]],[[300,-1],6,138],[[301,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[208,2],[208,208],[302,302],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],208],[-1,[[6,[208]]],78],[-1,[[6,[302]]],78],0,[[302,-1],2,234],[208,61],[302,61],[[208,208],66],[[302,302],66],[[208,4],[[6,[2,5]]]],[[302,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[302]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[208]]]],[208,[[24,[[31,[27]]]]]],[[208,-1],6,138],[[302,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[303,2],[304,2],[305,2],[303,303],[304,304],[305,305],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[[],303],[[],304],[[],305],[-1,[[6,[303]]],78],[-1,[[6,[304]]],78],[-1,[[6,[305]]],78],0,0,0,[303,61],[304,61],[305,61],[[303,303],66],[[304,304],66],[[305,305],66],[[303,4],[[6,[2,5]]]],[[304,4],[[6,[2,5]]]],[[305,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[28,[27]]],[[24,[303]]]],[[[28,[27]]],[[24,[304]]]],[[[28,[27]]],[[24,[305]]]],[303,[[24,[[31,[27]]]]]],[304,[[24,[[31,[27]]]]]],[305,[[24,[[31,[27]]]]]],[304,306],0,[[303,-1],6,138],[[304,-1],6,138],[[305,-1],6,138],[[304,306],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[306,42],[-1,-2,[],[]],[-1,-2,[],[]],[306,306],[[-1,-2],2,[],[]],[[306,306],71],[[-1,-2],71,[],[]],[[],306],[-1,[[6,[306]]],78],[[306,306],66],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[306,4],[[6,[2,5]]]],[-1,-1,[]],[229,[[24,[306]]]],[-1,-1,[]],[42,[[24,[306]]]],[[306,-1],2,112],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[229,66],[[306,306],[[24,[71]]]],[[306,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[229,[[6,[306,231]]]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[209,2],[209,209],[307,307],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],209],[-1,[[6,[209]]],78],[-1,[[6,[307]]],78],[[307,-1],2,234],[209,61],[307,61],[[209,209],66],[[307,307],66],[[209,4],[[6,[2,5]]]],[[307,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[307]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[209]]]],[209,[[24,[[31,[27]]]]]],0,[[209,-1],6,138],[[307,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[308,308],[[-1,-2],2,[],[]],[-1,[[6,[308]]],78],[[308,-1],2,234],[308,61],[[308,308],66],[[308,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[308]],39,235,-1,236],[[6,[2,231]]],237],[[308,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[222,2],[222,222],[309,309],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],222],[-1,[[6,[222]]],78],[-1,[[6,[309]]],78],[[309,-1],2,234],[222,61],[309,61],[[222,222],66],[[309,309],66],[[222,4],[[6,[2,5]]]],[[309,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[309]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[222]]]],[222,[[24,[[31,[27]]]]]],0,[[222,-1],6,138],[[309,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[223,2],[223,223],[310,310],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],223],[-1,[[6,[223]]],78],[-1,[[6,[310]]],78],[[310,-1],2,234],[223,61],[310,61],[[223,223],66],[[310,310],66],[[223,4],[[6,[2,5]]]],[[310,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[310]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[223]]]],[223,[[24,[[31,[27]]]]]],0,[[223,-1],6,138],[[310,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[311,2],[312,2],[311,311],[312,312],[313,313],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],311],[[],312],[-1,[[6,[311]]],78],[-1,[[6,[312]]],78],[-1,[[6,[313]]],78],[[313,-1],2,234],[311,61],[312,61],[313,61],[[311,311],66],[[312,312],66],[[313,313],66],[[311,4],[[6,[2,5]]]],[[312,4],[[6,[2,5]]]],[[313,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[313]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[311]]]],[[[28,[27]]],[[24,[312]]]],[311,[[24,[[31,[27]]]]]],[312,[[24,[[31,[27]]]]]],[[311,-1],6,138],[[312,-1],6,138],[[313,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[224,2],[224,224],[314,314],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],224],[-1,[[6,[224]]],78],[-1,[[6,[314]]],78],[[314,-1],2,234],[224,61],[314,61],[[224,224],66],[[314,314],66],[[224,4],[[6,[2,5]]]],[[314,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[314]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[224]]]],[224,[[24,[[31,[27]]]]]],0,[[224,-1],6,138],[[314,-1],6,138],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[225,2],[225,225],[315,315],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],225],[-1,[[6,[225]]],78],[-1,[[6,[315]]],78],[[315,-1],2,234],[225,61],[315,61],[[225,225],66],[[315,315],66],[[225,4],[[6,[2,5]]]],[[315,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[315]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[225]]]],[225,[[24,[[31,[27]]]]]],0,[[225,-1],6,138],[[315,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[316,2],[317,2],[316,316],[317,317],[318,318],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],316],[[],317],[-1,[[6,[316]]],78],[-1,[[6,[317]]],78],[-1,[[6,[318]]],78],[[318,-1],2,234],[316,61],[317,61],[318,61],[[316,316],66],[[317,317],66],[[318,318],66],[[316,4],[[6,[2,5]]]],[[317,4],[[6,[2,5]]]],[[318,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[318]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[316]]]],[[[28,[27]]],[[24,[317]]]],[316,[[24,[[31,[27]]]]]],[317,[[24,[[31,[27]]]]]],0,[[316,-1],6,138],[[317,-1],6,138],[[318,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[319,319],[[-1,-2],2,[],[]],[-1,[[6,[319]]],78],[[319,-1],2,234],[319,61],[[319,319],66],[[319,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[319]],39,235,-1,236],[[6,[2,231]]],237],[[319,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,[[[320,[-1]],321],[[320,[-1]]],[[325,[[324,[322,323]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[320,[-1]],-2],[[6,[[326,[158]],323]]],[[325,[[324,[322,323]]]]],[[327,[157]]]],[[[320,[-1]]],[[320,[-1]]],69],[[-1,-2],2,[],[]],[-1,[[6,[[320,[328]],329]]],[[331,[330]]]],[[[320,[-1]],4],[[6,[2,5]]],21],[-1,-1,[]],[332,[[320,[328]]]],[-1,-1,[]],[[[320,[-1]],-2],[[6,[[326,[187]],323]]],[[325,[[324,[322,323]]]]],[[327,[186]]]],[[[320,[-1]],-2],[[6,[[326,[176]],323]]],[[325,[[324,[322,323]]]]],[[327,[131]]]],[[[320,[-1]],-2],[[6,[[326,[179]],323]]],[[325,[[324,[322,323]]]]],[[327,[128]]]],[[[320,[-1]],-2],[[6,[[326,[178]],323]]],[[325,[[324,[322,323]]]]],[[327,[177]]]],[[[320,[-1]],-2],[[6,[[326,[181]],323]]],[[325,[[324,[322,323]]]]],[[327,[180]]]],[[[320,[-1]],-2],[[6,[[326,[191]],323]]],[[325,[[324,[322,323]]]]],[[327,[124]]]],[[[320,[-1]],-2],[[6,[[326,[173]],323]]],[[325,[[324,[322,323]]]]],[[327,[172]]]],[[[320,[-1]],-2],[[6,[[326,[161]],323]]],[[325,[[324,[322,323]]]]],[[327,[159]]]],[[[320,[-1]],-2],[[6,[[326,[164]],323]]],[[325,[[324,[322,323]]]]],[[327,[133]]]],[[[320,[-1]],-2],[[6,[[326,[165]],323]]],[[325,[[324,[322,323]]]]],[[327,[129]]]],[[[320,[-1]],-2],[[6,[[326,[183]],323]]],[[325,[[324,[322,323]]]]],[[327,[182]]]],[[[320,[-1]],-2],[[6,[[326,[163]],323]]],[[325,[[324,[322,323]]]]],[[327,[160]]]],[[[320,[-1]],-2],[[6,[[326,[171]],323]]],[[325,[[324,[322,323]]]]],[[327,[130]]]],[[[320,[-1]],-2],[[6,[[326,[162]],323]]],[[325,[[324,[322,323]]]]],[[327,[132]]]],[[[320,[-1]],-2],[[6,[[326,[193]],323]]],[[325,[[324,[322,323]]]]],[[327,[192]]]],[[[320,[-1]],-2],[[6,[[326,[175]],323]]],[[325,[[324,[322,323]]]]],[[327,[174]]]],[[[320,[-1]],-2],[[6,[[326,[189]],323]]],[[325,[[324,[322,323]]]]],[[327,[188]]]],[[[320,[-1]],-2],[[6,[[326,[190]],323]]],[[325,[[324,[322,323]]]]],[[327,[127]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[320,[-1]],61],[[320,[-1]]],[[325,[[324,[322,323]]]]]],[[[320,[-1]],61],[[320,[-1]]],[[325,[[324,[322,323]]]]]],[-1,[[320,[-1]]],[[325,[[324,[322,323]]]]]],[[[320,[-1]],321],[[320,[-1]]],[[325,[[324,[322,323]]]]]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],[[[320,[-1]],-2],[[6,[[326,[185]],323]]],[[325,[[324,[322,323]]]]],[[327,[184]]]],[[-1,-2],[[320,[[333,[-1,-2]]]]],[[337,[[334,[[324,[322,323]]]]],[[335,[336]]]],[325,[[324,[322,323]]]]],338],[[-1,339],[[320,[-1]]],[[325,[[324,[322,323]]]]]],[[339,340],[[320,[328]]]],[[339,3,340],[[320,[328]]]],0,0,0,[230,42],[-1,-2,[],[]],[-1,-2,[],[]],[230,230],[[-1,-2],2,[],[]],[[230,230],71],[[-1,-2],71,[],[]],[[],230],[-1,[[6,[230]]],78],[[230,230],66],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[230,4],[[6,[2,5]]]],[-1,-1,[]],[229,[[24,[230]]]],[-1,-1,[]],[42,[[24,[230]]]],[[230,-1],2,112],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[229,66],[[230,230],[[24,[71]]]],[[230,-1],6,138],[-1,-2,[],[]],[229,[[6,[230,231]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[220,2],[220,220],[341,341],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],220],[-1,[[6,[220]]],78],[-1,[[6,[341]]],78],[[341,-1],2,234],[220,61],[341,61],[[220,220],66],[[341,341],66],[[220,4],[[6,[2,5]]]],[[341,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[341]],39,235,-1,236],[[6,[2,231]]],237],[[[28,[27]]],[[24,[220]]]],[220,[[24,[[31,[27]]]]]],0,[[220,-1],6,138],[[341,-1],6,138],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[221,2],[221,221],[342,342],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],221],[-1,[[6,[221]]],78],[-1,[[6,[342]]],78],[[342,-1],2,234],[221,61],[342,61],[[221,221],66],[[342,342],66],[[221,4],[[6,[2,5]]]],[[342,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[342]],39,235,-1,236],[[6,[2,231]]],237],0,[[[28,[27]]],[[24,[221]]]],[221,[[24,[[31,[27]]]]]],0,[[221,-1],6,138],[[342,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[343,343],[[-1,-2],2,[],[]],[-1,[[6,[343]]],78],[[343,-1],2,234],[343,61],[[343,343],66],[[343,4],[[6,[2,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[343]],39,235,-1,236],[[6,[2,231]]],237],[[343,-1],6,138],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-1,[]],[-1,-1,[]],[[[40,[27]]],344],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[344,41],66],0,0,0,0,0,0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[345,41],[[89,[[88,[87]]]]]],[[345,41,[24,[60]]],[[89,[[88,[87]]]]]],0,[346,[[6,[157,11]]]],[346,[[6,[184,11]]]],0,[[347,118,41,80,37,54,-1,[24,[119]]],[[89,[[88,[87]]]]],120],[[347,118,41,80,37,54,[33,[38]],-1],[[89,[[88,[87]]]]],120],[[347,41,149,[33,[38]]],[[89,[[88,[87]]]]]],0,[[348,41,54,-1,[24,[119]]],[[89,[[88,[87]]]]],120],[[348,41,54,-1],[[89,[[88,[87]]]]],120],[[348,41,149],[[89,[[88,[87]]]]]],0,[[349,41,80,[40,[27]],54,-1,[24,[119]]],[[89,[[88,[87]]]]],120],[[349,41,80,[40,[27]],54,[33,[38]],-1],[[89,[[88,[87]]]]],120],[[349,41,149,[33,[38]]],[[89,[[88,[87]]]]]],0,[[350,41,121,122,-1],[[89,[[88,[87]]]]],120],[[350,41,121,122,-1],[[89,[[88,[87]]]]],120],0,[-1,-2,[],[]],[-1,-2,[],[]],[119,119],[[-1,-2],2,[],[]],[[],119],[[119,4],12],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],0,[-1,-2,[],[]],0,[[351,41,121,122,[24,[141]]],[[89,[[88,[87]]]]]],0,[[352,37,41,80,54,-1,[24,[119]]],[[89,[[88,[87]]]]],120],[[352,37,41,80,54,[33,[38]],-1],[[89,[[88,[87]]]]],120],[[352,41,149,[33,[38]]],[[89,[[88,[87]]]]]],0,[[353,118,41,80,54,-1,[24,[119]]],[[89,[[88,[87]]]]],120],[[353,118,41,80,54,[33,[38]],-1],[[89,[[88,[87]]]]],120],[[353,41,149,[33,[38]]],[[89,[[88,[87]]]]]],0,[[354,41,152,60,[24,[39]],[24,[141]],-1,[24,[119]]],[[89,[[88,[87]]]]],[120,92]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[125,125],[[-1,-2],2,[],[]],[[],125],[41,[[89,[[88,[87]]]]]],[41,[[89,[[88,[87]]]]]],[[125,4],12],[-1,-1,[]],[355,125],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[[125,66],[[6,[124,11]]]],0,[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[134,134],[356,356],[357,357],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],356],[-1,[[6,[134]]],78],[-1,[[6,[356]]],78],[[357,357],66],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2,1],[[89,[[88,[87]]]]],[],90],[[134,-1,3],[[91,[[6,[-2]]]]],[],[]],[[134,4],12],[[356,4],12],[[357,4],12],[159,134],[182,134],[-1,-1,[]],[161,356],[-1,-1,[]],[2,356],[183,356],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[134,42],[[[28,[27]]],[[24,[134]]]],[[[28,[27]]],[[24,[356]]]],[134,[[24,[[31,[27]]]]]],[356,[[24,[[31,[27]]]]]],[[-1,66],[[6,[-2,11]]],[],[]],[[357,66],[[6,[134,11]]]],[[134,-1],6,138],[[356,-1],6,138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[41,[24,[126]],[24,[39]]],[[89,[[88,[87]]]]]],0,0,0,0,0,0,0,0,0,0,[[358,359],66],[[358,339],66],[339,[[24,[360]]]],[358,61],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[361,[[6,[41,11]]]],[[],362],[41,363],[41,41],[339,339],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],358],[[],361],[[],339],[[339,42],66],[[339,339],66],[[339,42],66],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[-1,-2],66,[],[]],[[41,-1,1],[[89,[[88,[87]]]]],123],[[41,-1,1],[[89,[[88,[87]]]]],123],[[358,4],[[6,[2,5]]]],[[41,4],12],[[339,4],[[6,[2,5]]]],[[339,4],[[6,[2,5]]]],[-1,-1,[]],[42,358],[-1,-1,[]],[-1,-1,[]],[360,339],[364,339],[-1,-1,[]],[-1,358,[[56,[],[[55,[339]]]]]],[-1,[[6,[339,365]]],[[52,[[28,[27]]]]]],[366,[[6,[339,367]]]],[-1,-1,[]],[-1,-1,[]],[[[334,[-1]],-2],[[89,[[88,[87]]]]],[],[]],[[368,-1],[[89,[[88,[87]]]]],[92,369]],[42,339],[42,[[6,[339,365]]]],[[41,37,37,66,[24,[119]]],[[6,[370,11]]]],[[41,37,66,[24,[119]]],[[6,[370,11]]]],[358,[[24,[359]]]],[[339,-1],2,112],[339,[[24,[42]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[339,366],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[358,66],[358,61],[41,[[371,[26]]]],[[],358],[358,361],[[],361],[[],361],[[],41],[[],361],[339,42],[339,[[24,[364]]]],[339,[[24,[[372,[42]]]]]],[339,[[24,[43]]]],[41,66],[339,[[24,[42]]]],0,[339,[[24,[373]]]],[339,[[24,[42]]]],[[41,-1],2,107],[41,2],[[41,[31,[27]],152],[[6,[[375,[374]],11]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,25,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[42,[[6,[339]]]],[[[28,[27]]],[[6,[339]]]],[366,[[6,[339]]]],[25,[[6,[339]]]],[25,[[6,[339]]]],[339,[[6,[339]]]],[[[31,[27]]],[[6,[339]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[[-1,8],[[6,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[41,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[41,[375,[374]],376,[24,[377]]],[[6,[121,11]]]],[[361,378],361],[[361,-1],361,107],[[361,42,43,42,42],361],[[361,51],361],[377,358],[[361,1],361],[[361,8],361]],"c":[1400,4588,5115],"p":[[5,"RequestSettings",0],[1,"tuple"],[5,"AppliedRequestSettings",5585],[5,"Formatter",5586],[5,"Error",5586],[6,"Result",5587],[5,"Request",5588],[5,"PlatformVersion",5589],[5,"TypeId",5590],[6,"ContextProviderError",38],[6,"Error",38],[8,"Result",5586],[6,"MockError",5591],[6,"Error",5592],[6,"ProtocolError",5593],[6,"MerkleBlockError",5594],[6,"Error",5595],[6,"Error",5596],[6,"PlatformVersionError",5597],[6,"DapiClientError",5598],[10,"Debug",5586],[6,"Error",5599],[10,"Error",5600],[6,"Option",5601],[5,"String",5602],[5,"MockDashPlatformSdk",139],[1,"u8"],[1,"slice"],[10,"MockResponse",97],[10,"Mockable",97],[5,"Vec",5603],[5,"Cache",106],[5,"Arc",5604],[10,"Hash",5605],[10,"Eq",5606],[5,"GrpcContextProvider",106],[5,"Identifier",159],[6,"DataContract",159],[1,"u32"],[1,"array"],[5,"Sdk",5448],[1,"str"],[1,"u16"],[5,"NonZeroUsize",5607],[5,"PathBuf",5608],[10,"Query",159],[10,"Fetch",159],[5,"BTreeMap",5609],[10,"Ord",5606],[10,"FetchMany",159],[5,"Path",5608],[10,"AsRef",5610],[6,"Identity",159],[6,"IdentityPublicKey",159],[17,"Item"],[10,"IntoIterator",5611],[5,"BitSlice",5612],[10,"BitOrder",5613],[5,"DataContractV0",5614],[1,"u64"],[1,"usize"],[6,"DecodeError",5615],[10,"BorrowDecoder",5616],[6,"Document",159],[5,"u5",5617],[1,"bool"],[5,"DocumentQuery",159],[5,"LimitQuery",159],[10,"Clone",5618],[5,"DriveQuery",159],[6,"Ordering",5606],[6,"DataContractConfig",5619],[5,"PathQuery",5620],[6,"ContractBounds",5621],[5,"BinaryData",5622],[10,"Decoder",5616],[5,"MockContextProvider",159],[10,"Deserializer",5623],[6,"Value",5624],[6,"DocumentType",5625],[6,"DataContractError",5626],[6,"DocumentTypeRef",5625],[6,"EncodeError",5615],[10,"Encoder",5627],[1,"char"],[10,"FromIterator",5611],[10,"Future",5628],[5,"Box",5629],[5,"Pin",5630],[10,"DapiRequestExecutor",5598],[8,"BoxFuture",5631],[10,"Send",5632],[5,"Index",5633],[1,"never"],[6,"CreatedDataContract",5634],[5,"DocumentV0",5635],[5,"IdentityV0",5636],[5,"IdentityPublicKeyInCreationV0",5637],[6,"IdentityPublicKeyInCreation",5638],[5,"IdentityPublicKeyV0",5639],[5,"DriveConfig",5640],[6,"Error",5641],[6,"ConsensusError",5642],[5,"ValidationResult",5643],[6,"Value",5644],[6,"Encoding",5645],[10,"ContextProvider",159],[6,"Purpose",5646],[6,"SecurityLevel",5647],[5,"HashSet",5648],[6,"KeyType",5649],[10,"Hasher",5605],[5,"PartialIdentity",5650],[5,"StdRng",5651],[5,"ResponseMetadata",726],[10,"Into",5610],[5,"Metadata",5652],[8,"Credits",5653],[5,"PutSettings",5311],[10,"Signer",5654],[6,"AssetLockProof",5655],[5,"PrivateKey",5656],[10,"TransportRequest",5657],[5,"GetEpochsInfoRequest",726],[5,"EpochQuery",5346],[5,"ProTxHash",5658],[5,"GetProtocolVersionUpgradeVoteStatusRequest",726],[5,"GetDataContractHistoryRequest",726],[5,"GetIdentityBalanceAndRevisionRequest",726],[5,"GetIdentityKeysRequest",726],[5,"GetDataContractRequest",726],[5,"GetIdentityNonceRequest",726],[5,"GetIdentityBalanceRequest",726],[6,"IdentityRequest",5370],[6,"QueryItem",5659],[10,"Default",5660],[10,"Extend",5611],[10,"Serializer",5661],[6,"ProtocolValidationOperation",5662],[6,"Value",5663],[8,"UserFeeIncrease",5664],[6,"BitSpanError",5665],[6,"DocumentCreateTransition",5666],[5,"BlockInfo",5667],[5,"DocumentCreateTransitionV0",5668],[6,"DocumentReplaceTransition",5669],[5,"DocumentReplaceTransitionV0",5670],[6,"DataContractInSerializationFormat",5671],[6,"StateTransition",5672],[5,"OrderClause",5673],[5,"WhereClause",5674],[5,"Address",5675],[10,"WriteBase32",5617],[6,"KeyPurpose",726],[5,"Proof",726],[5,"StateTransitionBroadcastError",726],[5,"BroadcastStateTransitionRequest",726],[5,"BroadcastStateTransitionResponse",726],[5,"GetIdentityRequest",726],[5,"GetIdentityContractNonceRequest",726],[5,"GetIdentityResponse",726],[5,"GetIdentityNonceResponse",726],[5,"GetIdentityContractNonceResponse",726],[5,"GetIdentityBalanceResponse",726],[5,"GetIdentityBalanceAndRevisionResponse",726],[5,"KeyRequestType",726],[5,"AllKeys",726],[5,"SpecificKeys",726],[5,"SearchKey",726],[5,"SecurityLevelMap",726],[5,"GetIdentityKeysResponse",726],[5,"GetIdentitiesContractKeysRequest",726],[5,"GetIdentitiesContractKeysResponse",726],[5,"GetProofsRequest",726],[5,"GetProofsResponse",726],[5,"GetDataContractResponse",726],[5,"GetDataContractsRequest",726],[5,"GetDataContractsResponse",726],[5,"GetDataContractHistoryResponse",726],[5,"GetDocumentsRequest",726],[5,"GetDocumentsResponse",726],[5,"GetIdentityByPublicKeyHashRequest",726],[5,"GetIdentityByPublicKeyHashResponse",726],[5,"WaitForStateTransitionResultRequest",726],[5,"WaitForStateTransitionResultResponse",726],[5,"GetConsensusParamsRequest",726],[5,"GetConsensusParamsResponse",726],[5,"GetProtocolVersionUpgradeStateRequest",726],[5,"GetProtocolVersionUpgradeStateResponse",726],[5,"GetProtocolVersionUpgradeVoteStatusResponse",726],[5,"GetEpochsInfoResponse",726],[5,"GetPathElementsRequest",726],[5,"GetPathElementsResponse",726],[5,"GetIdentityRequestV0",4163],[5,"GetIdentityNonceRequestV0",4040],[5,"GetIdentityContractNonceRequestV0",3765],[5,"GetIdentityBalanceRequestV0",3519],[5,"GetIdentityBalanceAndRevisionRequestV0",3370],[5,"GetIdentityResponseV0",4212],[5,"GetIdentityNonceResponseV0",4089],[5,"GetIdentityContractNonceResponseV0",3815],[5,"GetIdentityBalanceResponseV0",3568],[5,"GetIdentityBalanceAndRevisionResponseV0",3419],[5,"GetIdentityKeysRequestV0",3889],[5,"GetIdentityKeysResponseV0",3941],[5,"GetIdentitiesContractKeysRequestV0",3162],[5,"GetIdentitiesContractKeysResponseV0",3217],[5,"GetProofsRequestV0",4435],[5,"GetProofsResponseV0",4604],[5,"GetDataContractRequestV0",2507],[5,"GetDataContractResponseV0",2556],[5,"GetDataContractsRequestV0",2630],[5,"GetDataContractsResponseV0",2679],[5,"GetDataContractHistoryRequestV0",2330],[5,"GetDataContractHistoryResponseV0",2382],[5,"GetDocumentsRequestV0",2804],[5,"GetDocumentsResponseV0",2883],[5,"GetIdentityByPublicKeyHashRequestV0",3642],[5,"GetIdentityByPublicKeyHashResponseV0",3691],[5,"WaitForStateTransitionResultRequestV0",5131],[5,"WaitForStateTransitionResultResponseV0",5180],[5,"GetProtocolVersionUpgradeStateRequestV0",4677],[5,"GetProtocolVersionUpgradeStateResponseV0",4725],[5,"GetProtocolVersionUpgradeVoteStatusRequestV0",4850],[5,"GetProtocolVersionUpgradeVoteStatusResponseV0",4900],[5,"GetEpochsInfoResponseV0",3033],[5,"GetPathElementsRequestV0",4286],[5,"GetPathElementsResponseV0",4336],[1,"i32"],[6,"KeyKindRequestType",5097],[5,"DecodeError",5676],[5,"GetConsensusParamsRequestV0",2178],[6,"Version",2178],[10,"BufMut",5677],[6,"WireType",5678],[5,"DecodeContext",5678],[10,"Buf",5679],[5,"ConsensusParamsBlock",2227],[5,"ConsensusParamsEvidence",2227],[5,"GetConsensusParamsResponseV0",2227],[6,"Version",2227],[6,"Version",2330],[6,"Version",2382],[5,"DataContractHistoryEntry",2432],[5,"DataContractHistory",2432],[6,"Result",2432],[6,"Version",2507],[6,"Version",2556],[6,"Result",2606],[6,"Version",2630],[5,"DataContractEntry",2679],[5,"DataContracts",2679],[6,"Version",2679],[6,"Result",2780],[6,"Version",2804],[6,"Start",2859],[6,"Version",2883],[5,"Documents",2933],[6,"Result",2933],[5,"GetEpochsInfoRequestV0",2982],[6,"Version",2982],[6,"Version",3033],[5,"EpochInfos",3083],[5,"EpochInfo",3083],[6,"Result",3083],[6,"Version",3162],[5,"Iter",5680],[5,"Cloned",5681],[5,"FilterMap",5682],[6,"Version",3217],[5,"PurposeKeys",3267],[5,"IdentityKeys",3267],[5,"IdentitiesKeys",3267],[6,"Result",3267],[6,"Version",3370],[6,"Version",3419],[5,"BalanceAndRevision",3469],[6,"Result",3469],[6,"Version",3519],[6,"Version",3568],[6,"Result",3618],[6,"Version",3642],[6,"Version",3691],[6,"Result",3741],[6,"Version",3765],[6,"Version",3815],[6,"Result",3865],[6,"Version",3889],[6,"Version",3941],[5,"Keys",3991],[6,"Result",3991],[6,"Version",4040],[6,"Version",4089],[6,"Result",4139],[6,"Version",4163],[6,"Version",4212],[6,"Result",4262],[6,"Version",4286],[6,"Version",4336],[5,"Elements",4386],[6,"Result",4386],[6,"Version",4435],[5,"DocumentRequest",4486],[5,"IdentityRequest",4486],[5,"ContractRequest",4486],[6,"Type",4568],[6,"Version",4604],[6,"Result",4654],[6,"Version",4677],[6,"Version",4725],[5,"Versions",4775],[5,"VersionEntry",4775],[6,"Result",4775],[6,"Version",4850],[6,"Version",4900],[5,"VersionSignals",4950],[5,"VersionSignal",4950],[6,"Result",4950],[6,"Request",5025],[5,"PlatformClient",5050],[6,"CompressionEncoding",5683],[5,"Bytes",5684],[5,"Status",5685],[5,"UnsyncBoxBody",5686],[10,"GrpcService",5687],[5,"Response",5688],[10,"IntoRequest",5588],[5,"Channel",5689],[5,"Error",5690],[5,"Endpoint",5691],[10,"TryInto",5610],[6,"PoolItem",5692],[5,"InterceptedService",5693],[5,"Request",5694],[17,"Response"],[5,"Response",5695],[10,"Service",5696],[10,"Interceptor",5693],[5,"Uri",5448],[5,"ConnectionPool",5692],[6,"Version",5131],[6,"Version",5180],[6,"Result",5230],[5,"TxId",5254],[10,"BroadcastStateTransition",5290],[10,"BroadcastRequestForStateTransition",5293],[10,"PurchaseDocument",5296],[10,"PutContract",5300],[10,"PutDocument",5304],[10,"PutIdentity",5308],[10,"TopUpIdentity",5331],[10,"TransferDocument",5333],[10,"UpdatePriceOfDocument",5337],[10,"WithdrawFromIdentity",5341],[8,"EpochIndex",5697],[6,"IdentityResponse",5370],[5,"PublicKeyHash",5370],[5,"AddressList",5448],[5,"Address",5698],[5,"Authority",5699],[5,"SdkBuilder",5448],[5,"Builder",5700],[5,"WaitForCancellationFuture",5701],[5,"PathAndQuery",5702],[5,"InvalidUri",5703],[5,"Parts",5703],[5,"InvalidUriParts",5703],[5,"Parts",5694],[10,"Sync",5632],[8,"IdentityNonce",5664],[5,"MutexGuard",5704],[5,"Port",5705],[5,"Scheme",5706],[5,"TransactionsWithProofsResponse",5707],[5,"Streaming",5708],[5,"Transaction",5709],[5,"Duration",5710],[5,"CancellationToken",5701],[6,"TransitionContext",5254],[10,"ExtendedEpochInfoEx",5346],[10,"MasternodeProtocolVoteEx",5446]],"b":[[13,"impl-RequestSettings"],[14,"impl-Default-for-RequestSettings"],[64,"impl-Debug-for-ContextProviderError"],[65,"impl-Display-for-ContextProviderError"],[66,"impl-Debug-for-Error"],[67,"impl-Display-for-Error"],[69,"impl-From%3CMockError%3E-for-Error"],[70,"impl-From%3CContextProviderError%3E-for-Error"],[71,"impl-From%3CError%3E-for-Error"],[72,"impl-From%3CProtocolError%3E-for-Error"],[74,"impl-From%3CMerkleBlockError%3E-for-Error"],[75,"impl-From%3CError%3E-for-Error"],[76,"impl-From%3CError%3E-for-Error"],[77,"impl-From%3CPlatformVersionError%3E-for-Error"],[78,"impl-From%3CDapiClientError%3CT%3E%3E-for-Error"],[79,"impl-From%3CError%3E-for-Error"],[290,"impl-PartialEq%3C%5Bu8;+32%5D%3E-for-%26Identifier"],[291,"impl-PartialEq%3C%26Identifier%3E-for-Identifier"],[292,"impl-PartialEq-for-Identifier"],[293,"impl-PartialEq%3C%5Bu8;+32%5D%3E-for-Identifier"],[327,"impl-Debug-for-Identifier"],[328,"impl-Display-for-Identifier"],[330,"impl-Debug-for-Document"],[331,"impl-Display-for-Document"],[335,"impl-From%3C%26DriveQuery%3C\'a%3E%3E-for-DocumentQuery"],[337,"impl-From%3CDriveQuery%3C\'a%3E%3E-for-DocumentQuery"],[344,"impl-From%3CCreatedDataContract%3E-for-DataContract"],[346,"impl-From%3CDataContractV0%3E-for-DataContract"],[351,"impl-From%3C%26IdentityPublicKeyInCreationV0%3E-for-IdentityPublicKey"],[352,"impl-From%3C%26IdentityPublicKeyInCreation%3E-for-IdentityPublicKey"],[353,"impl-From%3CIdentityPublicKeyV0%3E-for-IdentityPublicKey"],[354,"impl-From%3CIdentityPublicKeyInCreation%3E-for-IdentityPublicKey"],[355,"impl-From%3CIdentityPublicKeyInCreationV0%3E-for-IdentityPublicKey"],[398,"impl-IdentityPublicKeyHashMethodsV0-for-IdentityPublicKey"],[399,"impl-Hash-for-IdentityPublicKey"],[452,"impl-FromProof%3CGetIdentityByPublicKeyHashRequest%3E-for-Identity"],[453,"impl-FromProof%3CIdentityRequest%3E-for-Identity"],[454,"impl-FromProof%3CGetIdentityRequest%3E-for-Identity"],[505,"impl-Query%3CGetEpochsInfoRequest%3E-for-LimitQuery%3CE%3E"],[506,"impl-Query%3CGetProtocolVersionUpgradeVoteStatusRequest%3E-for-LimitQuery%3COption%3CProTxHash%3E%3E"],[507,"impl-Query%3CGetDataContractHistoryRequest%3E-for-LimitQuery%3C(Identifier,+u64)%3E"],[508,"impl-Query%3CGetProtocolVersionUpgradeVoteStatusRequest%3E-for-LimitQuery%3CProTxHash%3E"],[510,"impl-Query%3CGetIdentityBalanceAndRevisionRequest%3E-for-Identifier"],[511,"impl-Query%3CGetIdentityKeysRequest%3E-for-Identifier"],[512,"impl-Query%3CGetDataContractRequest%3E-for-Identifier"],[513,"impl-Query%3CGetIdentityNonceRequest%3E-for-Identifier"],[514,"impl-Query%3CGetIdentityBalanceRequest%3E-for-Identifier"],[515,"impl-Query%3CIdentityRequest%3E-for-Identifier"],[558,"impl-DocumentPlatformConversionMethodsV0-for-Document"],[559,"impl-Serialize-for-Document"],[642,"impl-TryFrom%3CValue%3E-for-Identifier"],[643,"impl-TryFrom%3CString%3E-for-Identifier"],[644,"impl-TryFrom%3C%26%5Bu8%5D%3E-for-Identifier"],[645,"impl-TryFrom%3CVec%3Cu8%3E%3E-for-Identifier"],[646,"impl-TryFrom%3C%26Value%3E-for-Identifier"],[658,"impl-TryFromPlatformVersioned%3CValue%3E-for-Identity"],[659,"impl-TryFromPlatformVersioned%3C%26Value%3E-for-Identity"],[715,"impl-PutDocument%3CS%3E-for-Document"],[716,"impl-TransferDocument%3CS%3E-for-Document"],[717,"impl-PurchaseDocument%3CS%3E-for-Document"],[718,"impl-UpdatePriceOfDocument%3CS%3E-for-Document"],[5402,"impl-From%3CGetIdentityRequest%3E-for-IdentityRequest"],[5403,"impl-From%3CGetIdentityByPublicKeyHashRequest%3E-for-IdentityRequest"],[5405,"impl-From%3CGetIdentityResponse%3E-for-IdentityResponse"],[5407,"impl-From%3C()%3E-for-IdentityResponse"],[5408,"impl-From%3CGetIdentityByPublicKeyHashResponse%3E-for-IdentityResponse"],[5482,"impl-PartialEq%3C%26str%3E-for-Uri"],[5483,"impl-PartialEq-for-Uri"],[5484,"impl-PartialEq%3Cstr%3E-for-Uri"],[5488,"impl-DapiRequestExecutor-for-Sdk"],[5489,"impl-DapiRequestExecutor-for-%26Sdk"],[5492,"impl-Display-for-Uri"],[5493,"impl-Debug-for-Uri"],[5498,"impl-From%3CAuthority%3E-for-Uri"],[5499,"impl-From%3CPathAndQuery%3E-for-Uri"],[5553,"impl-TryFrom%3C%26str%3E-for-Uri"],[5554,"impl-TryFrom%3C%26%5Bu8%5D%3E-for-Uri"],[5555,"impl-TryFrom%3CParts%3E-for-Uri"],[5556,"impl-TryFrom%3C%26String%3E-for-Uri"],[5557,"impl-TryFrom%3CString%3E-for-Uri"],[5558,"impl-TryFrom%3C%26Uri%3E-for-Uri"],[5559,"impl-TryFrom%3CVec%3Cu8%3E%3E-for-Uri"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
